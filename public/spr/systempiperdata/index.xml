<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sysPipe – systemPipeRdata</title><link>/spr/systempiperdata/</link><description>Recent content in systemPipeRdata on sysPipe</description><generator>Hugo -- gohugo.io</generator><atom:link href="/spr/systempiperdata/index.xml" rel="self" type="application/rss+xml"/><item><title>Spr: systemPipeRdata: Workflow templates and sample data</title><link>/spr/systempiperdata/vignette/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/spr/systempiperdata/vignette/</guid><description>
&lt;style type="text/css">
pre code {
white-space: pre !important;
overflow-x: scroll !important;
word-break: keep-all !important;
word-wrap: initial !important;
}
&lt;/style>
&lt;!---
- Compile from command-line
Rscript -e "rmarkdown::render('systemPipeRdata.Rmd', c('BiocStyle::html_document'), clean=F); knitr::knit('systemPipeRdata.Rmd', tangle=TRUE)"; Rscript -e "rmarkdown::render('systemPipeRdata.Rmd', c('BiocStyle::pdf_document'))"
- Commit to github
git commit -am "some edits"; git push -u origin master
-->
&lt;script type="text/javascript">
document.addEventListener("DOMContentLoaded", function() {
document.querySelector("h1").className = "title";
});
&lt;/script>
&lt;script type="text/javascript">
document.addEventListener("DOMContentLoaded", function() {
var links = document.links;
for (var i = 0, linksLength = links.length; i &lt; linksLength; i++)
if (links[i].hostname != window.location.hostname)
links[i].target = '_blank';
});
&lt;/script>
&lt;p>&lt;strong>Note:&lt;/strong> the most recent version of this vignette can be found &lt;a href="https://github.com/tgirke/systemPipeRdata/blob/master/vignettes/systemPipeRdata.Rmd">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> if you use &lt;em>&lt;code>systemPipeR&lt;/code>&lt;/em> and &lt;em>&lt;code>systemPipeRdata&lt;/code>&lt;/em> in published research, please cite:&lt;/p>
&lt;p>Backman, T.W.H and Girke, T. (2016). &lt;em>systemPipeR&lt;/em>: Workflow and Report Generation Environment. &lt;em>BMC Bioinformatics&lt;/em>, 17: 388. &lt;a href="https://doi.org/10.1186/s12859-016-1241-0">10.1186/s12859-016-1241-0&lt;/a>.&lt;/p>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>&lt;a href="https://github.com/tgirke/systemPipeRdata">&lt;em>&lt;code>systemPipeRdata&lt;/code>&lt;/em>&lt;/a> is a helper package
to generate with a single command workflow templates that are intended to be
used by its parent package &lt;a href="http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html">&lt;em>&lt;code>systemPipeR&lt;/code>&lt;/em>&lt;/a> (H Backman and Girke 2016).
The &lt;em>systemPipeR&lt;/em> project provides a suite of R/Bioconductor packages for designing,
building and running end-to-end analysis workflows on local machines, HPC clusters
and cloud systems, while generating at the same time publication quality analysis reports.&lt;/p>
&lt;p>To test workflows quickly or design new ones from existing templates, users can
generate with a single command workflow instances fully populated with sample data
and parameter files required for running a chosen workflow.
Pre-configured directory structure of the workflow environment and the sample data
used by &lt;em>&lt;code>systemPipeRdata&lt;/code>&lt;/em> are described &lt;a href="http://bioconductor.org/packages/release/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html#load-sample-data-and-workflow-templates">here&lt;/a>.&lt;/p>
&lt;h1 id="getting-started">Getting started&lt;/h1>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>The &lt;em>&lt;code>systemPipeRdata&lt;/code>&lt;/em> package is available at &lt;a href="http://www.bioconductor.org/packages/release/data/experiment/html/systemPipeRdata.html">Bioconductor&lt;/a> and can be installed from within R as follows:&lt;/p>
&lt;pre>&lt;code class="language-r">if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE)) install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>Also, it is possible to install the development version from &lt;a href="http://www.bioconductor.org/packages/devel/data/experiment/html/systemPipeRdata.html">Bioconductor&lt;/a>.&lt;/p>
&lt;pre>&lt;code class="language-r">BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;, version = &amp;quot;devel&amp;quot;, build_vignettes = TRUE,
dependencies = TRUE) # Installs Devel version from Bioconductor
&lt;/code>&lt;/pre>
&lt;h2 id="loading-package-and-documentation">Loading package and documentation&lt;/h2>
&lt;pre>&lt;code class="language-r">library(&amp;quot;systemPipeRdata&amp;quot;) # Loads the package
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">library(help = &amp;quot;systemPipeRdata&amp;quot;) # Lists package info
vignette(&amp;quot;systemPipeRdata&amp;quot;) # Opens vignette
&lt;/code>&lt;/pre>
&lt;h2 id="starting-with-pre-configured-workflow-templates">Starting with pre-configured workflow templates&lt;/h2>
&lt;p>Load one of the available workflows into your current working directory.
The following does this for the &lt;em>&lt;code>varseq&lt;/code>&lt;/em> workflow template. The name of the resulting
workflow directory can be specified under the &lt;em>&lt;code>mydirname&lt;/code>&lt;/em> argument. The default &lt;em>&lt;code>NULL&lt;/code>&lt;/em>
uses the name of the chosen workflow. An error is issued if a directory of the same
name and path exists already.&lt;/p>
&lt;pre>&lt;code class="language-r">genWorkenvir(workflow = &amp;quot;varseq&amp;quot;, mydirname = NULL)
setwd(&amp;quot;varseq&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>On Linux and OS X systems the same can be achieved from the command-line of a terminal with the following commands.&lt;/p>
&lt;pre>&lt;code class="language-bash">$ Rscript -e &amp;quot;systemPipeRdata::genWorkenvir(workflow='varseq', mydirname=NULL)&amp;quot;
&lt;/code>&lt;/pre>
&lt;h1 id="workflow-templates-collection">Workflow templates collection&lt;/h1>
&lt;p>A collection of workflow templates are available, and it is possible to browse the
current availability, as follows:&lt;/p>
&lt;pre>&lt;code class="language-r">availableWF(github = TRUE)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## $systemPipeRdata
## [1] &amp;quot;chipseq&amp;quot; &amp;quot;new&amp;quot; &amp;quot;riboseq&amp;quot; &amp;quot;rnaseq&amp;quot; &amp;quot;varseq&amp;quot;
##
## $github
## workflow
## 1 systemPipeR/systemPipeChIPseq
## 2 systemPipeR/systemPipeRIBOseq
## 3 systemPipeR/systemPipeRNAseq
## 4 systemPipeR/systemPipeVARseq
## 5 systemPipeR/systemPipeCLIPseq
## 6 systemPipeR/systemPipeDeNovo
## 7 systemPipeR/systemPipeMetaTrans
## 8 systemPipeR/systemPipeMethylseq
## branches version
## 1 master release
## 2 master release
## 3 cluster, master, singleMachine release
## 4 master release
## 5 master devel
## 6 master devel
## 7 master devel
## 8 master devel
## html
## 1 https://github.com/systemPipeR/systemPipeChIPseq
## 2 https://github.com/systemPipeR/systemPipeRIBOseq
## 3 https://github.com/systemPipeR/systemPipeRNAseq
## 4 https://github.com/systemPipeR/systemPipeVARseq
## 5 https://github.com/systemPipeR/systemPipeCLIPseq
## 6 https://github.com/systemPipeR/systemPipeDeNovo
## 7 https://github.com/systemPipeR/systemPipeMetaTrans
## 8 https://github.com/systemPipeR/systemPipeMethylseq
## description
## 1 Workflow Template
## 2 Workflow Template
## 3 Workflow Template
## 4 Workflow Template
## 5 Workflow Template
## 6 Workflow Template
## 7 Workflow Template
## 8 Workflow Template
&lt;/code>&lt;/pre>
&lt;p>This function returns the list of workflow templates available within the package
and &lt;a href="https://github.com/systemPipeR">systemPipeR Organization&lt;/a> on GitHub. Each one
listed template can be created as described above.&lt;/p>
&lt;p>The workflow template choose from Github will be installed as an R package, and
also it creates the environment with all the settings and files to run the demo
analysis&lt;/p>
&lt;pre>&lt;code class="language-r">genWorkenvir(workflow=&amp;quot;systemPipeR/systemPipeVARseq&amp;quot;, mydirname=&amp;quot;NULL&amp;quot;)
setwd(&amp;quot;systemPipeVARseq&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>Besides, it is possible to choose different versions of the workflow template,
defined through other branches on the GitHub Repository. By default, the &lt;em>&lt;code>master&lt;/code>&lt;/em>
branch is selected, however, it is possible to define a different branch with the &lt;em>&lt;code>ref&lt;/code>&lt;/em> argument.&lt;/p>
&lt;pre>&lt;code class="language-r">genWorkenvir(workflow=&amp;quot;systemPipeR/systemPipeRNAseq&amp;quot;, ref = &amp;quot;singleMachine&amp;quot;)
setwd(&amp;quot;systemPipeRNAseq&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h2 id="download-a-specific-r-markdown-file">Download a specific R Markdown file&lt;/h2>
&lt;p>Also, it is possible to download a specific workflow script for your analysis.
The URL can be specified under &lt;em>&lt;code>url&lt;/code>&lt;/em> argument and the R Markdown file name in
the &lt;em>&lt;code>urlname&lt;/code>&lt;/em> argument. The default &lt;em>&lt;code>NULL&lt;/code>&lt;/em> copies the current version available in the chose template.&lt;/p>
&lt;pre>&lt;code class="language-r">genWorkenvir(workflow=&amp;quot;rnaseq&amp;quot;, url = &amp;quot;https://raw.githubusercontent.com/systemPipeR/systemPipeRNAseq/cluster/vignettes/systemPipeRNAseq.Rmd&amp;quot;,
urlname = &amp;quot;rnaseq_V-cluster.Rmd&amp;quot;)
setwd(&amp;quot;rnaseq&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h1 id="dynamic-generation-of-workflow-template">Dynamic generation of workflow template&lt;/h1>
&lt;p>It is possible to create a new workflow structure from RStudio
menu &lt;code>File -&amp;gt; New File -&amp;gt; R Markdown -&amp;gt; From Template -&amp;gt; systemPipeR New WorkFlow&lt;/code>.
This interactive option creates the same environment as demonstrated above.&lt;/p>
&lt;p>&lt;img src="results/rstudio.png" alt="">
&lt;strong>Figure 1:&lt;/strong> Selecting workflow template within RStudio.&lt;/p>
&lt;h1 id="directory-structure">Directory Structure&lt;/h1>
&lt;p>The workflow templates generated by &lt;em>&lt;code>genWorkenvir&lt;/code>&lt;/em> contain the following preconfigured directory structure:&lt;/p>
&lt;ul>
&lt;li>&lt;span style="color:green">&lt;em>&lt;strong>workflow/&lt;/strong>&lt;/em>&lt;/span> (&lt;em>e.g.&lt;/em> &lt;em>rnaseq/&lt;/em>)
&lt;ul>
&lt;li>This is the root directory of the R session running the workflow.&lt;/li>
&lt;li>Run script ( &lt;em>*.Rmd&lt;/em>) and sample annotation (&lt;em>targets.txt&lt;/em>) files are located here.&lt;/li>
&lt;li>Note, this directory can have any name (&lt;em>e.g.&lt;/em> &lt;span style="color:green">&lt;em>&lt;strong>rnaseq&lt;/strong>&lt;/em>&lt;/span>, &lt;span style="color:green">&lt;em>&lt;strong>varseq&lt;/strong>&lt;/em>&lt;/span>). Changing its name does not require any modifications in the run script(s).&lt;/li>
&lt;li>&lt;strong>Important subdirectories&lt;/strong>:
&lt;ul>
&lt;li>&lt;span style="color:green">&lt;em>&lt;strong>param/&lt;/strong>&lt;/em>&lt;/span>
&lt;ul>
&lt;li>Stores non-CWL parameter files such as: &lt;em>*.param&lt;/em>, &lt;em>*.tmpl&lt;/em> and &lt;em>*.run.sh&lt;/em>. These files are only required for backwards compatibility to run old workflows using the previous custom command-line interface.&lt;/li>
&lt;li>&lt;span style="color:green">&lt;em>&lt;strong>param/cwl/&lt;/strong>&lt;/em>&lt;/span>: This subdirectory stores all the CWL parameter files. To organize workflows, each can have its own subdirectory, where all &lt;code>CWL param&lt;/code> and &lt;code>input.yml&lt;/code> files need to be in the same subdirectory.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span style="color:green">&lt;em>&lt;strong>data/&lt;/strong>&lt;/em> &lt;/span>
&lt;ul>
&lt;li>FASTQ files&lt;/li>
&lt;li>FASTA file of reference (&lt;em>e.g.&lt;/em> reference genome)&lt;/li>
&lt;li>Annotation files&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span style="color:green">&lt;em>&lt;strong>results/&lt;/strong>&lt;/em>&lt;/span>
&lt;ul>
&lt;li>Analysis results are usually written to this directory, including: alignment, variant and peak files (BAM, VCF, BED); tabular result files; and image/plot files&lt;/li>
&lt;li>Note, the user has the option to organize results files for a given sample and analysis step in a separate subdirectory.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note&lt;/strong>: Directory names are indicated in &lt;span style="color:grey">&lt;em>&lt;strong>green&lt;/strong>&lt;/em>&lt;/span>.
Users can change this structure as needed, but need to adjust the code in their workflows
accordingly.&lt;/p>
&lt;center>
&lt;img src="results/directory.png">
&lt;/center>
&lt;p>&lt;strong>Figure 2:&lt;/strong> &lt;em>systemPipeR’s&lt;/em> preconfigured directory structure.&lt;/p>
&lt;h1 id="run-workflows">Run workflows&lt;/h1>
&lt;p>Next, run from within R the chosen sample workflow by executing the code provided
in the corresponding &lt;em>&lt;code>*.Rmd&lt;/code>* template file.
Much more detailed information on running and customizing &lt;/em>&lt;code>systemPipeR&lt;/code>*&lt;a href="http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html">&lt;/a>
workflows is available in its overview vignette &lt;a href="http://www.bioconductor.org/packages/devel/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html">here&lt;/a>.
This vignette can also be opened from R with the following command.&lt;/p>
&lt;pre>&lt;code class="language-r">library(&amp;quot;systemPipeR&amp;quot;) # Loads systemPipeR which needs to be installed via BiocManager::install() from Bioconductor
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">vignette(&amp;quot;systemPipeR&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h2 id="return-paths-to-sample-data">Return paths to sample data&lt;/h2>
&lt;p>The location of the sample data provided by &lt;em>&lt;code>systemPipeRdata&lt;/code>&lt;/em> can be returned as a &lt;em>&lt;code>list&lt;/code>&lt;/em>.&lt;/p>
&lt;pre>&lt;code class="language-r">pathList()
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## $targets
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/targets.txt&amp;quot;
##
## $targetsPE
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/targetsPE.txt&amp;quot;
##
## $annotationdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/annotation/&amp;quot;
##
## $fastqdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/fastq/&amp;quot;
##
## $bamdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/bam/&amp;quot;
##
## $paramdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/&amp;quot;
##
## $workflows
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/&amp;quot;
##
## $chipseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/chipseq/&amp;quot;
##
## $rnaseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/rnaseq/&amp;quot;
##
## $riboseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/riboseq/&amp;quot;
##
## $varseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/varseq/&amp;quot;
##
## $new
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/new/&amp;quot;
&lt;/code>&lt;/pre>
&lt;h1 id="version-information">Version information&lt;/h1>
&lt;pre>&lt;code class="language-r">sessionInfo()
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## R version 4.0.3 (2020-10-10)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 20.04.2 LTS
##
## Matrix products: default
## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
## LAPACK: /home/dcassol/src/R-4.0.3/lib/libRlapack.so
##
## locale:
## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C
## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8
## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8
## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C
## [9] LC_ADDRESS=C LC_TELEPHONE=C
## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C
##
## attached base packages:
## [1] stats graphics grDevices utils datasets
## [6] methods base
##
## other attached packages:
## [1] systemPipeRdata_1.18.1 BiocStyle_2.18.1
##
## loaded via a namespace (and not attached):
## [1] bookdown_0.21 codetools_0.2-18
## [3] digest_0.6.27 jsonlite_1.7.2
## [5] formatR_1.7 magrittr_2.0.1
## [7] evaluate_0.14 blogdown_1.1.7
## [9] rlang_0.4.10 stringi_1.5.3
## [11] remotes_2.2.0 rmarkdown_2.6
## [13] tools_4.0.3 stringr_1.4.0
## [15] parallel_4.0.3 xfun_0.21
## [17] yaml_2.2.1 compiler_4.0.3
## [19] BiocGenerics_0.36.0 BiocManager_1.30.10
## [21] htmltools_0.5.1.1 knitr_1.31
&lt;/code>&lt;/pre>
&lt;h1 id="funding">Funding&lt;/h1>
&lt;p>This project was supported by funds from the National Institutes of Health (NIH) and the National Science Foundation (NSF).&lt;/p>
&lt;h1 id="references">References&lt;/h1>
&lt;div id="refs" class="references csl-bib-body hanging-indent">
&lt;div id="ref-H_Backman2016-bt" class="csl-entry">
&lt;p>H Backman, Tyler W, and Thomas Girke. 2016. “&lt;span class="nocase">systemPipeR: NGS workflow and report generation environment&lt;/span>.” &lt;em>BMC Bioinformatics&lt;/em> 17 (1): 388. &lt;a href="https://doi.org/10.1186/s12859-016-1241-0">https://doi.org/10.1186/s12859-016-1241-0&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div></description></item></channel></rss>