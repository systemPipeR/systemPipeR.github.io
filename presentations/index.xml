<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sysPipe – Presentations</title><link>/presentations/</link><description>Recent content in Presentations on sysPipe</description><generator>Hugo -- gohugo.io</generator><atom:link href="/presentations/index.xml" rel="self" type="application/rss+xml"/><item><title>Presentations: ![](https://raw.githubusercontent.com/systemPipeR/systemPipeShiny/master/inst/app/www/img/sps_small.png){width=1in}
&lt;br/>_systemPipeShiny_</title><link>/presentations/sps/sps_intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/presentations/sps/sps_intro/</guid><description>
&lt;!-- background-image: url(https://raw.githubusercontent.com/systemPipeR/systemPipeShiny/master/inst/app/www/img/sps_small.png) -->
&lt;p>layout: true
background-image: url(&lt;a href="https://raw.githubusercontent.com/systemPipeR/systemPipeShiny/master/inst/app/www/img/sps_small.png">https://raw.githubusercontent.com/systemPipeR/systemPipeShiny/master/inst/app/www/img/sps_small.png&lt;/a>)
background-position: 100% 0%
background-size: 10%&lt;/p></description></item><item><title>Presentations: _systemPipeR_</title><link>/presentations/spr/spr_project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/presentations/spr/spr_project/</guid><description>
&lt;link href="../rmarkdown-libs/font-awesome/css/all.css" rel="stylesheet" />
&lt;link href="../rmarkdown-libs/font-awesome/css/v4-shims.css" rel="stylesheet" />
&lt;link href="../rmarkdown-libs/tile-view/tile-view.css" rel="stylesheet" />
&lt;script src="../rmarkdown-libs/tile-view/tile-view.js">&lt;/script>
&lt;link href="../rmarkdown-libs/animate.css/animate.xaringan.css" rel="stylesheet" />
&lt;link href="../rmarkdown-libs/tachyons/tachyons.min.css" rel="stylesheet" />
&lt;p>layout: true
background-image: url(&lt;a href="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/systemPipeR.png">https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/systemPipeR.png&lt;/a>)
background-position: 99% 1%
background-size: 10%&lt;/p>
&lt;hr>
&lt;p>class: middle&lt;/p>
&lt;h2 id="outline">Outline&lt;/h2>
&lt;h4 id="introduction">Introduction&lt;/h4>
&lt;h4 id="design">Design&lt;/h4>
&lt;h4 id="how-to-run-a-workflow">How to run a Workflow&lt;/h4>
&lt;h4 id="workflows-tutorial">Workflows Tutorial&lt;/h4>
&lt;h4 id="live-demo">Live Demo&lt;/h4>
&lt;!-- ################## -->
&lt;!-- ## Introduction -->
&lt;!-- ################## -->
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="i-classfas-fa-file-codei-introduction">&lt;i class="fas fa-file-code">&lt;/i> Introduction&lt;/h1>
&lt;!-- ################## Slide ################## -->
&lt;hr>
&lt;h2 id="introduction-1">Introduction&lt;/h2>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;a href="http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html">&lt;em>systemPipeR&lt;/em>&lt;/a> provides a suite of R/Bioconductor packages for designing, building and running end-to-end analysis workflows on local machines, HPC clusters and cloud systems, while generating at the same time publication quality analysis reports&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>systemPipeR&lt;/em> offers many utilities to build, control, and execute
workflows entirely from R&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
The environment takes advantage of central community S4 classes of the Bioconductor ecosystem&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Workflows are managed by generic workflow management containers supporting both analysis routines implemented in R code and/or command-line software&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Simple annotation system targets&lt;/p>
&lt;!-- ################## Slide ################## -->
&lt;hr>
&lt;h3 id="systempipers-core-functionalities">systemPipeR’s Core Functionalities&lt;/h3>
&lt;p>.center[
&lt;img src="highLevel_color.svg" height="490px" class="center" />
]&lt;/p>
&lt;!-- ################## Slide ################## -->
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>&amp;ndash;
.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure">WF infrastructure&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
&lt;em>systemPipeR&lt;/em> offers many utilities to build, control, and execute
workflows entirely from R. The environment takes advantage of central community S4 classes
of the Bioconductor ecosystem. Workflows are managed by generic workflow management
containers supporting both analysis routines implemented in R code and/or command-line
software. A layered monitoring infrastructure is provided to design, control and debug each
step in a workflow. The run environment allows to execute workflows entirely or with a
intuitive to use step-wise execution syntax using R’s standard subsetting syntax
(runWF(sys[1:3])) or pipes (%&amp;gt;%).
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features-1">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure-1">WF infrastructure&lt;/h4>
&lt;h4 id="command-line-support">Command-line support&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
An important feature of systemPipeR is support for
running command-line software by adopting the Common Workflow Language (CWL). The
latter is a widely adopted community standard for describing analysis workflows. This design
offers several advantages such as:&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
seamless integration of most command-line software&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
support to run systemPipeR workflows from R or many other popular computer languages&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
efficient sharing of workflows across different workflow environments.
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features-2">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure-2">WF infrastructure&lt;/h4>
&lt;h4 id="command-line-support-1">Command-line support&lt;/h4>
&lt;h4 id="parallel-evaluation">Parallel evaluation&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
The processing time of workflows can be greatly reduced by making use
of parallel evaluations across several CPU cores on single machines, or multiple nodes of
computer clusters and cloud-based systems. systemPipeR simplifies these parallelization tasks
without creating any limitations for users who do not have access to high-performance
computer resources
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features-3">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure-3">WF infrastructure&lt;/h4>
&lt;h4 id="command-line-support-2">Command-line support&lt;/h4>
&lt;h4 id="parallel-evaluation-1">Parallel evaluation&lt;/h4>
&lt;h4 id="reports-infrastructure">Reports infrastructure&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
&lt;em>systemPipeR’s&lt;/em> reporting infrastructure
includes three types of interconnected reports each serving a different purpose:&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
a scientific report, based on R Markdown, contains all scientifically relevant results&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
a technical report captures all technical information important for each workflow step, including parameter
settings, software versions, and warning/error messages, etc.&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
a visual report depicts the entire workflow topology including its run status in form of a workflow graph&lt;/p>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features-4">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure-4">WF infrastructure&lt;/h4>
&lt;h4 id="command-line-support-3">Command-line support&lt;/h4>
&lt;h4 id="parallel-evaluation-2">Parallel evaluation&lt;/h4>
&lt;h4 id="reports-infrastructure-1">Reports infrastructure&lt;/h4>
&lt;h4 id="shiny-web-interface">Shiny Web Interface&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
Recently, the systemPipeShiny package has been added that allows
users to design workflows in an interactive graphical user interface (GUI). In addition to
designing workflows, this new interface allows users to run and to monitor workflows in an
intuitive manner without the need of knowing R.
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-structural-features-5">&lt;i class="fas fa-toolbox">&lt;/i> Structural Features&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h4 id="wf-infrastructure-5">WF infrastructure&lt;/h4>
&lt;h4 id="command-line-support-4">Command-line support&lt;/h4>
&lt;h4 id="parallel-evaluation-3">Parallel evaluation&lt;/h4>
&lt;h4 id="reports-infrastructure-2">Reports infrastructure&lt;/h4>
&lt;h4 id="shiny-web-interface-1">Shiny Web Interface&lt;/h4>
&lt;h4 id="workflow-templates">Workflow Templates&lt;/h4>
&lt;p>]&lt;/p>
&lt;p>.right-column[
A rich set of end-to-end workflow templates is provided by this
project for a wide range omics applications. In addition, users can contribute and share their
workflows with the community by submitting them to a central GitHub repository
]&lt;/p>
&lt;!-- ################## Slide ################## -->
&lt;hr>
&lt;h2 id="important-functions">Important Functions&lt;/h2>
&lt;p>.small[&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Category&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>genWorkenvir&lt;/code>&lt;/td>
&lt;td>Generates workflow templates provided by systemPipeRdata helper package / or from the individuals’ pipelines packages&lt;/td>
&lt;td>Accessory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>loadWorkflow&lt;/code>&lt;/td>
&lt;td>Constructs &lt;code>SYSargs2&lt;/code> object from CWL param and targets files&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>renderWF&lt;/code>&lt;/td>
&lt;td>Populate all the command-line in an &lt;code>SYSargs2&lt;/code> object&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>subsetWF&lt;/code>&lt;/td>
&lt;td>Subsetting &lt;code>SYSargs2&lt;/code> class slots&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>runCommandline&lt;/code>&lt;/td>
&lt;td>Executes command-line software on samples and parameters specified in &lt;code>SYSargs2&lt;/code> object&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clusterRun&lt;/code>&lt;/td>
&lt;td>Runs command-line software in parallel mode on a computer cluster&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>writeTargetsout&lt;/code>&lt;/td>
&lt;td>Write updated targets out to file/Generate targets file with reference&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>output_update&lt;/code>&lt;/td>
&lt;td>Updates the output files paths in the &lt;code>SYSargs2&lt;/code> object&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>singleYML&lt;/code>&lt;/td>
&lt;td>Create automatically the &lt;code>param.yml&lt;/code>&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>createWF&lt;/code>&lt;/td>
&lt;td>Create automatically &lt;code>param.cwl&lt;/code> and the &lt;code>param.yml&lt;/code> based on the command line&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>config.param&lt;/code>&lt;/td>
&lt;td>Custom configuration of the CWL param files from R&lt;/td>
&lt;td>&lt;code>SYSargs2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>]&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="important-functions-1">Important Functions&lt;/h2>
&lt;p>.small[&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Category&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>initWF&lt;/code>&lt;/td>
&lt;td>Constructs &lt;code>SYSargsList&lt;/code> workflow control module (S4 object) from script file&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>configWF&lt;/code>&lt;/td>
&lt;td>Control of which step of the workflow will be run and the generation of the new RMarkdown&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>runWF&lt;/code>&lt;/td>
&lt;td>Runs all the R chunk define in the RMarkdown file or a subset, e.g. &lt;code>runWF[1:3]&lt;/code>&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>renderReport&lt;/code>&lt;/td>
&lt;td>Render Scientific Report based on RMarkdown&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>subsetRmd&lt;/code>&lt;/td>
&lt;td>Write updated subset Rmarkdown of R chunk with text associate in the step selected&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>plotWF&lt;/code>&lt;/td>
&lt;td>Plot visual workflow designs and topologies with different graphical layouts&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWF&lt;/code>&lt;/td>
&lt;td>Return the overview of the workflow steps computational status&lt;/td>
&lt;td>&lt;code>SYSargsList&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>evalCode&lt;/code>&lt;/td>
&lt;td>Turn eval option &lt;code>TRUE&lt;/code> or &lt;code>FALSE&lt;/code> on RMarkdown file&lt;/td>
&lt;td>Accessory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tryCL&lt;/code>&lt;/td>
&lt;td>Checks if third-party software or utility is installed and set in the PATH&lt;/td>
&lt;td>Accessory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>]&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;!-- ################## -->
&lt;!-- ## Design -->
&lt;!-- ################## -->
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="i-classfas-fa-drafting-compassi-design">&lt;i class="fas fa-drafting-compass">&lt;/i> Design&lt;/h1>
&lt;hr>
&lt;h3 id="workflow-management-solutions">Workflow Management Solutions&lt;/h3>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>systemPipeR&lt;/em> central concept for designing workflows is &lt;strong>workflow
management containers&lt;/strong> (S4 class)&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>SYSargs2&lt;/em> controls workflow steps with input/output file operations&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>SYSargs2&lt;/em> requires a targets and a set of workflow definition files (here param.cwl and param.yml)&lt;/p>
&lt;!-- &lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i> -->
&lt;!-- Any number of predefined or custom workflow steps is supported -->
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>SYSargsList&lt;/em> objects organize one or many &lt;em>SYSargs2&lt;/em>
containers in a single compound object capturing all information required to run, control and
monitor complex workflows from start to finish&lt;/p>
&lt;p>.center[
&lt;img src="SPRclass.png" class="center" />
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfar-fa-folder-openi-directory-structure">&lt;i class="far fa-folder-open">&lt;/i> Directory Structure&lt;/h2>
&lt;p>The workflow templates generated by &lt;em>&lt;code>genWorkenvir&lt;/code>&lt;/em> contain the following preconfigured directory structure:&lt;/p>
&lt;p>&lt;img src="directory.png" height="425px" class="center" />&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-project-diagrami-workflows-collection">&lt;i class="fas fa-project-diagram">&lt;/i> Workflows Collection&lt;/h2>
&lt;p>Browse pipelines that are currently available as part of the &lt;em>systemPipeR&lt;/em> toolkit&lt;/p>
&lt;p>.small[&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">WorkFlow&lt;/th>
&lt;th style="text-align:center">Description&lt;/th>
&lt;th style="text-align:center">Version&lt;/th>
&lt;th style="text-align:center">GitHub&lt;/th>
&lt;th style="text-align:center">CI Testing&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://systempiper.github.io/systemPipeChIPseq/articles/systemPipeChIPseq.html">systemPipeChIPseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">ChIP-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">v1.0 &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/check.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeChIPseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeChIPseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://systempiper.github.io/systemPipeRIBOseq/articles/systemPipeRIBOseq.html">systemPipeRIBOseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">RIBO-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">v1.0 &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/check.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeRIBOseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeRIBOseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://systempiper.github.io/systemPipeRNAseq/articles/systemPipeRNAseq.html">systemPipeRNAseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">RNA-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">v1.0 &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/check.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeRNAseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeRNAseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://systempiper.github.io/systemPipeVARseq/articles/systemPipeVARseq.html">systemPipeVARseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">VAR-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">v1.0 &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/check.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeVARseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeVARseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeMethylseq">systemPipeMethylseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">Methyl-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">devel &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/devel.png" align="center" style="width:25px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeMethylseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeMethylseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeDeNovo">systemPipeDeNovo&lt;/a>&lt;/td>
&lt;td style="text-align:center">De novo transcriptome assembly Workflow Template&lt;/td>
&lt;td style="text-align:center">devel &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/devel.png" align="center" style="width:25px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeDeNovo"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeDeNovo/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeCLIPseq">systemPipeCLIPseq&lt;/a>&lt;/td>
&lt;td style="text-align:center">CLIP-Seq Workflow Template&lt;/td>
&lt;td style="text-align:center">devel &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/devel.png" align="center" style="width:25px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeCLIPseq"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeCLIPseq/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeMetaTrans">systemPipeMetaTrans&lt;/a>&lt;/td>
&lt;td style="text-align:center">Metatranscriptomic Sequencing Workflow Template&lt;/td>
&lt;td style="text-align:center">devel &lt;img src="https://raw.githubusercontent.com/tgirke/systemPipeR/gh-pages/images/devel.png" align="center" style="width:25px;" />&lt;/td>
&lt;td style="text-align:center">&lt;a href="https://github.com/systemPipeR/systemPipeMetaTrans"> &lt;img src="https://raw.githubusercontent.com/systemPipeR/systemPipeR/gh-pages/images/GitHub-Mark-120px-plus.png" align="center" style="width:20px;" />&lt;/td>
&lt;td style="text-align:center">&lt;img src="https://github.com/systemPipeR/systemPipeMetaTrans/workflows/R-CMD-check/badge.svg" alt="R-CMD-check">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">]&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="cwl">CWL&lt;/h1>
&lt;hr>
&lt;h2 id="i-classfas-fa-box-openi-cwl">&lt;i class="fas fa-box-open">&lt;/i> CWL&lt;/h2>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i> &lt;strong>TODO:&lt;/strong>
Add section with CWL details&lt;/p>
&lt;p>.center[
&lt;img src="cwl.png" height="490px" class="center" />
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-box-openi-cwl-and-spr">&lt;i class="fas fa-box-open">&lt;/i> CWL and SPR&lt;/h2>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i> &lt;strong>TODO:&lt;/strong>
How to use CWL definition with &lt;em>systemPipeR&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;em>SYSargs2&lt;/em> instances are constructed from a &lt;em>&lt;code>targets&lt;/code>&lt;/em> file and two &lt;em>&lt;code>param&lt;/code>&lt;/em> file
&lt;ul>
&lt;li>&lt;em>&lt;code>hisat2-mapping-se.cwl&lt;/code>&lt;/em> file contains the settings for running command-line software&lt;/li>
&lt;li>&lt;em>&lt;code>hisat2-mapping-se.yml&lt;/code>&lt;/em> file define all the variables to be input in the specific command-line step &lt;/h4>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">targets &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targets.txt&amp;quot;, package=&amp;quot;systemPipeR&amp;quot;)
dir_path &amp;lt;- system.file(&amp;quot;extdata/cwl/hisat2/hisat2-se&amp;quot;, package=&amp;quot;systemPipeR&amp;quot;)
align &amp;lt;- loadWF(targets=targets, wf_file=&amp;quot;hisat2-mapping-se.cwl&amp;quot;,
input_file=&amp;quot;hisat2-mapping-se.yml&amp;quot;, dir_path=dir_path)
align &amp;lt;- renderWF(align, inputvars=c(FileName=&amp;quot;_FASTQ_PATH_&amp;quot;, SampleName=&amp;quot;_SampleName_&amp;quot;))
## Instance of 'SYSargs2':
## Slot names/accessors:
## targets: 18 (M1A...V12B), targetsheader: 4 (lines)
## modules: 2
## wf: 0, clt: 1, yamlinput: 7 (components)
## input: 18, output: 18
## cmdlist: 18
## WF Steps:
## 1. hisat2-mapping-se.cwl (rendered: TRUE)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="i-classfas-fa-box-openi-cwl-and-spr-1">&lt;i class="fas fa-box-open">&lt;/i> CWL and SPR&lt;/h2>
&lt;h2 id="sysargs2-instance">&lt;em>&lt;code>SYSargs2&lt;/code>&lt;/em> instance&lt;/h2>
&lt;ul>
&lt;li>Slots and accessor functions have the same names&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">names(align)
# [1] &amp;quot;targets&amp;quot; &amp;quot;targetsheader&amp;quot; &amp;quot;modules&amp;quot; &amp;quot;wf&amp;quot; &amp;quot;clt&amp;quot;
# [6] &amp;quot;yamlinput&amp;quot; &amp;quot;cmdlist&amp;quot; &amp;quot;input&amp;quot; &amp;quot;output&amp;quot; &amp;quot;cwlfiles&amp;quot;
# [11] &amp;quot;inputvars&amp;quot;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>&lt;em>&lt;code>cmdlist&lt;/code>&lt;/em> return command-line arguments for the specific software, here &lt;em>&lt;code>HISAT2&lt;/code>&lt;/em> for the first sample&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">cmdlist(align)[1]
# $M1A
# $M1A$`hisat2-mapping-se.cwl`
# [1] &amp;quot;hisat2 -S results/M1A.sam -x ./data/tair10.fasta -k 1 --min-intronlen 30 --max-intronlen 3000 -U ./data/SRR446027_1.fastq.gz --threads 4&amp;quot;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>The output components of &lt;em>&lt;code>SYSargs2&lt;/code>&lt;/em> define all the expected output files for each step in the workflow; some of which are the input for the next workflow step&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">output(align)[1]
# $M1A
# $M1A$`hisat2-mapping-se.cwl`
# [1] &amp;quot;results/M1A.sam&amp;quot;
&lt;/code>&lt;/pre>
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="i-classfas-fa-tablei-metadata">&lt;i class="fas fa-table">&lt;/i> Metadata&lt;/h1>
&lt;hr>
&lt;h3 id="i-classfas-fa-box-openi-targets-file-organizes-samples">&lt;i class="fas fa-box-open">&lt;/i> &lt;em>Targets&lt;/em> file organizes samples&lt;/h3>
&lt;ul>
&lt;li>Structure of &lt;em>&lt;code>targets&lt;/code>&lt;/em> file for single-end (SE) library&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">targetspath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targets.txt&amp;quot;, package=&amp;quot;systemPipeR&amp;quot;)
read.delim(targetspath, comment.char = &amp;quot;#&amp;quot;)[1:3,1:4]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## FileName SampleName Factor SampleLong
## 1 ./data/SRR446027_1.fastq.gz M1A M1 Mock.1h.A
## 2 ./data/SRR446028_1.fastq.gz M1B M1 Mock.1h.B
## 3 ./data/SRR446029_1.fastq.gz A1A A1 Avr.1h.A
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Structure of &lt;em>&lt;code>targets&lt;/code>&lt;/em> file for paired-end (PE) library&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">targetspath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targetsPE.txt&amp;quot;, package=&amp;quot;systemPipeR&amp;quot;)
read.delim(targetspath, comment.char = &amp;quot;#&amp;quot;)[1:3,1:5]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## FileName1 FileName2 SampleName Factor
## 1 ./data/SRR446027_1.fastq.gz ./data/SRR446027_2.fastq.gz M1A M1
## 2 ./data/SRR446028_1.fastq.gz ./data/SRR446028_2.fastq.gz M1B M1
## 3 ./data/SRR446029_1.fastq.gz ./data/SRR446029_2.fastq.gz A1A A1
## SampleLong
## 1 Mock.1h.A
## 2 Mock.1h.B
## 3 Avr.1h.A
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h3 id="i-classfas-fa-box-openi-integration-with-summarizedexperiment">&lt;i class="fas fa-box-open">&lt;/i> Integration with &lt;em>SummarizedExperiment&lt;/em>&lt;/h3>
&lt;ul>
&lt;li>Integrates &lt;em>targets&lt;/em> files and count table from &lt;em>systemPipeR&lt;/em> to a &lt;em>SummarizedExperiment&lt;/em> object&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-r">## Create an object with targets file and comparison and count table
sprSE &amp;lt;- SPRdata(targetspath = targetspath, cmp=TRUE)
metadata(sprSE)
# $version
# [1] ‘1.23.9’
#
# $comparison
# $comparison$CMPset1
# [,1] [,2]
# [1,] &amp;quot;M1&amp;quot; &amp;quot;A1&amp;quot;
# [2,] &amp;quot;M1&amp;quot; &amp;quot;V1&amp;quot;
# [3,] &amp;quot;A1&amp;quot; &amp;quot;V1&amp;quot;
# [4,] &amp;quot;M6&amp;quot; &amp;quot;A6&amp;quot;
colData(sprSE)
# DataFrame with 18 rows and 6 columns
# FileName SampleName Factor SampleLong
# &amp;lt;character&amp;gt; &amp;lt;character&amp;gt; &amp;lt;character&amp;gt; &amp;lt;character&amp;gt;
# M1A ./data/SRR446027_1.f.. M1A M1 Mock.1h.A
# M1B ./data/SRR446028_1.f.. M1B M1 Mock.1h.B
# ... ... ... ... ...
# M12B ./data/SRR446040_1.f.. M12B M12 Mock.12h.B
&lt;/code>&lt;/pre>
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="i-classfas-fa-codei-live-demo">&lt;i class="fas fa-code">&lt;/i> Live Demo&lt;/h1>
&lt;hr>
&lt;h2 id="i-classfas-fa-box-openi-install-package">&lt;i class="fas fa-box-open">&lt;/i> Install Package&lt;/h2>
&lt;p>Install the &lt;strong>systemPipeRdata&lt;/strong> package from &lt;a href="http://www.bioconductor.org/packages/release/data/experiment/html/systemPipeRdata.html">Bioconductor&lt;/a>:&lt;/p>
&lt;pre>&lt;code class="language-r">if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly=TRUE))
install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;systemPipeR&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h3 id="i-classfas-fa-booki-load-package-and-documentation">&lt;i class="fas fa-book">&lt;/i> Load Package and Documentation&lt;/h3>
&lt;p>&lt;i class="fas fa-question" style="color:#00758a;">&lt;/i>
Load package:&lt;/p>
&lt;pre>&lt;code class="language-r">library(&amp;quot;systemPipeR&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>&lt;i class="fas fa-question" style="color:#00758a;">&lt;/i>
Access help:&lt;/p>
&lt;pre>&lt;code class="language-r">library(help=&amp;quot;systemPipeR&amp;quot;)
vignette(&amp;quot;systemPipeR&amp;quot;)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="i-classfas-fa-codei-quick-start">&lt;i class="fas fa-code">&lt;/i> Quick Start&lt;/h2>
&lt;h3 id="load-sample-workflow">Load Sample Workflow&lt;/h3>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>systemPipeRdata&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Helper package to generate with a single command workflow templates for &lt;em>systemPipeR&lt;/em>&lt;/li>
&lt;li>Includes sample data for testing&lt;/li>
&lt;li>User can create new workflows or change and extend existing ones&lt;/li>
&lt;li>Template Workflows:
&lt;ul>
&lt;li>Sample workflows can be loaded with the &lt;em>&lt;code>genWorkenvir&lt;/code>&lt;/em> function from &lt;strong>systemPipeRdata&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Generate workflow template:&lt;/p>
&lt;pre>&lt;code class="language-r">library(systemPipeRdata)
genWorkenvir(workflow=&amp;quot;rnaseq&amp;quot;)
setwd(&amp;quot;rnaseq&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
More details about &lt;em>systemPipeRdata&lt;/em> package &lt;a href="https://systempipe.org/pages/SPRdata_intro/SPRdata_intro#1">here&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-box-openi-install-workflow">&lt;i class="fas fa-box-open">&lt;/i> Install Workflow&lt;/h2>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Check the workflow template availability&lt;/p>
&lt;pre>&lt;code class="language-r">availableWF(github = TRUE)
# $systemPipeRdata
# [1] &amp;quot;chipseq&amp;quot; &amp;quot;new&amp;quot; &amp;quot;riboseq&amp;quot; &amp;quot;rnaseq&amp;quot; &amp;quot;varseq&amp;quot;
#
# $github
# workflow branches version html description
# 1 systemPipeR/systemPipeChIPseq master release https://github.com/systemPipeR/systemPipeChIPseq Workflow Template
# 2 systemPipeR/systemPipeRIBOseq master release https://github.com/systemPipeR/systemPipeRIBOseq Workflow Template
# 3 systemPipeR/systemPipeRNAseq cluster, master, singleMachine release https://github.com/systemPipeR/systemPipeRNAseq Workflow Template
# 4 systemPipeR/systemPipeVARseq master release https://github.com/systemPipeR/systemPipeVARseq Workflow Template
# 5 systemPipeR/systemPipeCLIPseq master devel https://github.com/systemPipeR/systemPipeCLIPseq Workflow Template
# 6 systemPipeR/systemPipeDeNovo master devel https://github.com/systemPipeR/systemPipeDeNovo Workflow Template
# 7 systemPipeR/systemPipeMetaTrans master devel https://github.com/systemPipeR/systemPipeMetaTrans Workflow Template
# 8 systemPipeR/systemPipeMethylseq master devel https://github.com/systemPipeR/systemPipeMethylseq Workflow Template
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="i-classfas-fa-mouse-pointeri-dynamic-workflow-template">&lt;i class="fas fa-mouse-pointer">&lt;/i> Dynamic Workflow Template&lt;/h2>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Create dynamic Workflow Templates with &lt;em>RStudio&lt;/em>&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;code>File -&amp;gt; New File -&amp;gt; R Markdown -&amp;gt; From Template&lt;/code>
.center[
&lt;img src="rstudio.png" height="425px" class="center" />
]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-run-a-workflow">&lt;i class="fas fa-toolbox">&lt;/i> Run a Workflow&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h3 id="setup">Setup&lt;/h3>
&lt;p>]&lt;/p>
&lt;p>.right-column[&lt;/p>
&lt;pre>&lt;code class="language-r">library(systemPipeR)
targetspath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targets.txt&amp;quot;, package=&amp;quot;systemPipeR&amp;quot;)
read.delim(targetspath, comment.char = &amp;quot;#&amp;quot;)[1:4,1:4]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## FileName SampleName Factor SampleLong
## 1 ./data/SRR446027_1.fastq.gz M1A M1 Mock.1h.A
## 2 ./data/SRR446028_1.fastq.gz M1B M1 Mock.1h.B
## 3 ./data/SRR446029_1.fastq.gz A1A A1 Avr.1h.A
## 4 ./data/SRR446030_1.fastq.gz A1B A1 Avr.1h.B
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">script &amp;lt;- system.file(&amp;quot;extdata/workflows/rnaseq&amp;quot;, &amp;quot;systemPipeRNAseq.Rmd&amp;quot;, package=&amp;quot;systemPipeRdata&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-run-a-workflow-1">&lt;i class="fas fa-toolbox">&lt;/i> Run a Workflow&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h3 id="setup-1">Setup&lt;/h3>
&lt;h3 id="initwf">&lt;code>initWF&lt;/code>&lt;/h3>
&lt;p>]&lt;/p>
&lt;p>.right-column[&lt;/p>
&lt;pre>&lt;code class="language-r">sysargslist &amp;lt;- initWF(script = script, targets = targetspath, overwrite = TRUE)
# Project started with success: ./SYSproject and SYSconfig.yml were created.
&lt;/code>&lt;/pre>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-run-a-workflow-2">&lt;i class="fas fa-toolbox">&lt;/i> Run a Workflow&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h3 id="setup-2">Setup&lt;/h3>
&lt;h3 id="initwf-1">&lt;code>initWF&lt;/code>&lt;/h3>
&lt;h3 id="configwf">&lt;code>configWF&lt;/code>&lt;/h3>
&lt;p>]&lt;/p>
&lt;p>.right-column[&lt;/p>
&lt;pre>&lt;code class="language-r">sysargslist &amp;lt;- configWF(sysargslist, input_steps = &amp;quot;1:3&amp;quot;)
sysargslist
# Instance of 'SYSargsList':
# WF Steps:
# 1. Rmarkdown/HTML setting
# 2. Introduction
# 3. Samples and environment settings
# 3.1. Environment settings and input data
# 3.2. Required packages and resources
# 3.3. Experiment definition provided by `targets` file
&lt;/code>&lt;/pre>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-run-a-workflow-3">&lt;i class="fas fa-toolbox">&lt;/i> Run a Workflow&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h3 id="setup-3">Setup&lt;/h3>
&lt;h3 id="initwf-2">&lt;code>initWF&lt;/code>&lt;/h3>
&lt;h3 id="configwf-1">&lt;code>configWF&lt;/code>&lt;/h3>
&lt;h3 id="runwf">&lt;code>runWF&lt;/code>&lt;/h3>
&lt;p>]&lt;/p>
&lt;p>.right-column[&lt;/p>
&lt;pre>&lt;code class="language-r">sysargslist &amp;lt;- runWF(sysargslist, steps = &amp;quot;1:2&amp;quot;)
# Step: 1: Introduction --&amp;gt; DONE
# Step: 2: Samples and environment settings --&amp;gt; DONE
# Step: 2.1: Environment settings and input data --&amp;gt; DONE
# Step: 2.2: Required packages and resources --&amp;gt; DONE
# Step: 2.3: Experiment definition provided by `targets` file --&amp;gt; DONE
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">sysargslist &amp;lt;- runWF(sysargslist, steps = &amp;quot;ALL&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="i-classfas-fa-toolboxi-run-a-workflow-4">&lt;i class="fas fa-toolbox">&lt;/i> Run a Workflow&lt;/h2>
&lt;p>.left-column[&lt;/p>
&lt;h3 id="setup-4">Setup&lt;/h3>
&lt;h3 id="initwf-3">&lt;code>initWF&lt;/code>&lt;/h3>
&lt;h3 id="configwf-2">&lt;code>configWF&lt;/code>&lt;/h3>
&lt;h3 id="runwf-1">&lt;code>runWF&lt;/code>&lt;/h3>
&lt;h3 id="renderreport">&lt;code>renderReport&lt;/code>&lt;/h3>
&lt;p>]&lt;/p>
&lt;p>.right-column[&lt;/p>
&lt;pre>&lt;code class="language-r">sysargslist &amp;lt;- renderReport(sysargslist = sysargslist)
&lt;/code>&lt;/pre>
&lt;p>]&lt;/p>
&lt;hr>
&lt;h2 id="how-to-use-pipes-">How to Use Pipes &lt;code>%&amp;gt;%&lt;/code>&lt;/h2>
&lt;p>Consider the following example, in which the steps are the initialization, configuration and running the entire workflow.&lt;/p>
&lt;pre>&lt;code class="language-r">library(systemPipeR)
sysargslist &amp;lt;- initWF(script =&amp;quot;systemPipeRNAseq.Rmd&amp;quot;, overwrite = TRUE) %&amp;gt;%
configWF(input_steps = &amp;quot;1:6&amp;quot;) %&amp;gt;%
runWF(steps = &amp;quot;1:2&amp;quot;)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;p>class: inverse, center, middle&lt;/p>
&lt;h1 id="i-classfas-fa-tasksi-project-updates">&lt;i class="fas fa-tasks">&lt;/i> Project Updates&lt;/h1>
&lt;hr>
&lt;h3 id="targets-x-summarizedexperiment">&lt;em>targets&lt;/em> x &lt;em>SummarizedExperiment&lt;/em>&lt;/h3>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Extension &amp;ldquo;SummarizedExperiment&amp;rdquo; methods:&lt;/p>
&lt;pre>&lt;code class="language-r">sprSE &amp;lt;- addAssay(sprSE, assay(countMatrix), xName=&amp;quot;countMatrix&amp;quot;)
sprSE &amp;lt;- addMetadata(sprSE, list(targets), xName=&amp;quot;metadata&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
New Function:&lt;/p>
&lt;pre>&lt;code class="language-r">## Create empty SummarizedExperiment
sprSE &amp;lt;- SPRdata()
## Create an object with targets file and comparison and count table
sprSE &amp;lt;- SPRdata(counts = countMatrix, cmp=TRUE, targetspath = targetspath)
metadata(sprSE)
colData(sprSE)
assays(sprSE)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="spr-paper">SPR Paper&lt;/h2>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
&lt;a href="https://www.overleaf.com/project/5e94948a23918a000116311c">Link to draft&lt;/a>&lt;/p>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Added the main points to discuss in the draft&lt;/p>
&lt;p>&lt;i class="fas fa-arrow-circle-right" style="color:#00758a;">&lt;/i>
Writing: Results and introduction&lt;/p>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Improve Graphical Abstract&lt;/p>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Show case?&lt;/p>
&lt;hr>
&lt;h2 id="sysargslist">&lt;em>SYSargsList&lt;/em>&lt;/h2>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Explain how &lt;em>SYSargsList&lt;/em> is implemented - Vignette&lt;/p>
&lt;p>.small[&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>initWF&lt;/code>&lt;/td>
&lt;td>Constructs &lt;code>SYSargsList&lt;/code> workflow control module (S4 object) from script file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>configWF&lt;/code>&lt;/td>
&lt;td>Control of which step of the workflow will be run and the generation of the new RMarkdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>runWF&lt;/code>&lt;/td>
&lt;td>Runs all the R chunk define in the RMarkdown file or a subset, e.g. &lt;code>runWF[1:3]&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>renderReport&lt;/code>&lt;/td>
&lt;td>Render Scientific Report based on RMarkdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>renderLog&lt;/code>&lt;/td>
&lt;td>Render logs Report based on RMarkdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>updateWF&lt;/code>&lt;/td>
&lt;td>Recover the &lt;code>SYSargsList&lt;/code> workflow previous ran and restarts the WF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>plotWF&lt;/code>&lt;/td>
&lt;td>Plot visual workflow designs and topologies with different graphical layouts&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWF&lt;/code>&lt;/td>
&lt;td>Return the overview of the workflow steps computational status&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>evalCode&lt;/code>&lt;/td>
&lt;td>Turn eval option &lt;code>TRUE&lt;/code> or &lt;code>FALSE&lt;/code> on RMarkdown file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tryCL&lt;/code>&lt;/td>
&lt;td>Checks if third-party software or utility is installed and set in the PATH&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Improve &lt;code>statusWF()&lt;/code>&lt;/p>
&lt;hr>
&lt;h2 id="visualization-in-systempiper">Visualization in &lt;em>systemPipeR&lt;/em>&lt;/h2>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Add to vignette (SPR or SPS)&lt;/p>
&lt;ul>
&lt;li>&lt;code>exploreDDS&lt;/code>, &lt;code>exploreDDSplot&lt;/code>, &lt;code>GLMplot&lt;/code>, &lt;code>MAplot&lt;/code>, &lt;code>MDSplot&lt;/code>, &lt;code>PCAplot&lt;/code>, &lt;code>hclustplot&lt;/code>, &lt;code>heatMaplot&lt;/code>, &lt;code>tSNEplot&lt;/code>, &lt;code>volcanoplot&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Enrichment analysis and visualization tool for SPR&lt;/p>
&lt;ul>
&lt;li>Integration with &lt;code>FGSEA&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="website">WebSite&lt;/h2>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Updated the vignette&lt;/p>
&lt;p>&lt;i class="fas fa-check-circle" style="color:#00758a;">&lt;/i>
Added &lt;em>systemPipeRdata&lt;/em> vignette and presentation: &lt;a href="https://systempipe.org/docs/systemPipeRdata/">link&lt;/a>&lt;/p>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Redirect &lt;a href="http://girke.bioinformatics.ucr.edu/systemPipeR/">http://girke.bioinformatics.ucr.edu/systemPipeR/&lt;/a> to new page&lt;/p>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Add content to FAQ section&lt;/p>
&lt;p>&lt;i class="fas fa-circle" style="color:#00758a;">&lt;/i>
Add tutorials videos&lt;/p>
&lt;hr>
&lt;p>class: middle&lt;/p>
&lt;h1 id="thanks">Thanks!&lt;/h1>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Browse source code at &lt;a href="https://github.com/tgirke/systemPipeR/"> &lt;i class="fab fa-github fa-2x">&lt;/i>&lt;/a>&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
Ask a question about systemPipeR at Bioconductor Support Page
&lt;a href="https://support.bioconductor.org/t/systempiper/">&lt;i class="far fa-question-circle fa-2x">&lt;/i>&lt;/a>&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;em>systemPipeRdata&lt;/em> at &lt;a href="http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html">Bioconductor&lt;/a>&lt;/p>
&lt;p>&lt;i class="fas fa-hand-point-right" style="color:#00758a;">&lt;/i>
&lt;a href="https://systempipe.org/">https://systempipe.org/&lt;/a>&lt;/p></description></item></channel></rss>