<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysPipe – systemPipeRdata</title>
    <link>/spr/systempiperdata/</link>
    <description>Recent content in systemPipeRdata on sysPipe</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/spr/systempiperdata/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Spr: Workflow templates and sample data</title>
      <link>/spr/systempiperdata/systempiperdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/spr/systempiperdata/systempiperdata/</guid>
      <description>
        
        
        &lt;script src=&#34;../../rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-ext-fixedcolumns/css/fixedColumns.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-ext-fixedcolumns/js/dataTables.fixedColumns.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-ext-scroller/css/scroller.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-ext-scroller/js/dataTables.scroller.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-ext-fixedcolumns/css/fixedColumns.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-ext-fixedcolumns/js/dataTables.fixedColumns.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/dt-ext-scroller/css/scroller.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/dt-ext-scroller/js/dataTables.scroller.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;style type=&#34;text/css&#34;&gt;
pre code {
white-space: pre !important;
overflow-x: scroll !important;
word-break: keep-all !important;
word-wrap: initial !important;
}
&lt;/style&gt;
&lt;!---
- Compile from command-line
Rscript -e &#34;rmarkdown::render(&#39;systemPipeRdata.Rmd&#39;, c(&#39;BiocStyle::html_document&#39;), clean=F); knitr::knit(&#39;systemPipeRdata.Rmd&#39;, tangle=TRUE)&#34;; Rscript -e &#34;rmarkdown::render(&#39;systemPipeRdata.Rmd&#39;, c(&#39;BiocStyle::pdf_document&#39;))&#34;
--&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
  document.querySelector(&#34;h1&#34;).className = &#34;title&#34;;
});
&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
  var links = document.links;  
  for (var i = 0, linksLength = links.length; i &lt; linksLength; i++)
    if (links[i].hostname != window.location.hostname)
      links[i].target = &#39;_blank&#39;;
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the most recent version of this vignette can be found &lt;a href=&#34;https://github.com/tgirke/systemPipeRdata/blob/master/vignettes/systemPipeRdata.Rmd&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if you use &lt;em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; in published research, please cite:&lt;/p&gt;
&lt;p&gt;Backman, T.W.H and Girke, T. (2016). &lt;em&gt;systemPipeR&lt;/em&gt;: Workflow and Report Generation Environment. &lt;em&gt;BMC Bioinformatics&lt;/em&gt;, 17: 388. &lt;a href=&#34;https://doi.org/10.1186/s12859-016-1241-0&#34;&gt;10.1186/s12859-016-1241-0&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tgirke/systemPipeRdata&#34;&gt;&lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt;&lt;/a&gt; is a helper package
to generate with a single command workflow templates that are intended to be
used by its parent package &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html&#34;&gt;&lt;em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;&lt;/em&gt;&lt;/a&gt; (H Backman and Girke 2016).
The &lt;em&gt;systemPipeR&lt;/em&gt; project provides a suite of R/Bioconductor packages for designing,
building and running end-to-end analysis workflows on local machines, HPC clusters
and cloud systems, while generating at the same time publication quality analysis reports.&lt;/p&gt;
&lt;p&gt;To test workflows quickly or design new ones from existing templates, users can
generate with a single command workflow instances fully populated with sample data
and parameter files required for running a chosen workflow.
Pre-configured directory structure of the workflow environment and the sample data
used by &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; are described &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html#load-sample-data-and-workflow-templates&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; package is available at &lt;a href=&#34;http://www.bioconductor.org/packages/release/data/experiment/html/systemPipeRdata.html&#34;&gt;Bioconductor&lt;/a&gt; and can be installed from within R as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE)) install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, it is possible to install the development version from &lt;a href=&#34;http://www.bioconductor.org/packages/devel/data/experiment/html/systemPipeRdata.html&#34;&gt;Bioconductor&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;, version = &amp;quot;devel&amp;quot;, build_vignettes = TRUE, 
    dependencies = TRUE)  # Installs Devel version from Bioconductor
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;loading-package-and-documentation&#34;&gt;Loading package and documentation&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;systemPipeRdata&amp;quot;)  # Loads the package
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(help = &amp;quot;systemPipeRdata&amp;quot;)  # Lists package info
vignette(&amp;quot;systemPipeRdata&amp;quot;)  # Opens vignette
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;starting-with-pre-configured-workflow-templates&#34;&gt;Starting with pre-configured workflow templates&lt;/h2&gt;
&lt;p&gt;Load one of the available workflows into your current working directory.
The following does this for the &lt;em&gt;&lt;code&gt;varseq&lt;/code&gt;&lt;/em&gt; workflow template. The name of the resulting
workflow directory can be specified under the &lt;em&gt;&lt;code&gt;mydirname&lt;/code&gt;&lt;/em&gt; argument. The default &lt;em&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/em&gt;
uses the name of the chosen workflow. An error is issued if a directory of the same
name and path exists already.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow = &amp;quot;systemPipeR/SPvarseq&amp;quot;, mydirname = &amp;quot;varseq&amp;quot;)
setwd(&amp;quot;varseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Linux and OS X systems the same can be achieved from the command-line of a terminal with the following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ Rscript -e &amp;quot;systemPipeRdata::genWorkenvir(workflow=&#39;systemPipeR/SPvarseq&#39;, mydirname=&#39;varseq&#39;)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;workflow-templates-collection&#34;&gt;Workflow templates collection&lt;/h1&gt;
&lt;p&gt;A collection of workflow templates are available, and it is possible to browse the
current availability, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;availableWF(github = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function returns the list of workflow templates available within the package
and &lt;a href=&#34;https://github.com/systemPipeR&#34;&gt;systemPipeR Organization&lt;/a&gt; on GitHub. Each one
listed template can be created as described above.&lt;/p&gt;
&lt;p&gt;The workflow template choose from Github will be installed as an R package, and
also it creates the environment with all the settings and files to run the demo
analysis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;systemPipeR/SPrnaseq&amp;quot;, mydirname=&amp;quot;NULL&amp;quot;)
setwd(&amp;quot;SPrnaseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Besides, it is possible to choose different versions of the workflow template,
defined through other branches on the GitHub Repository. By default, the &lt;em&gt;&lt;code&gt;master&lt;/code&gt;&lt;/em&gt;
branch is selected, however, it is possible to define a different branch with the &lt;em&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/em&gt; argument.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;systemPipeR/SPrnaseq&amp;quot;, ref = &amp;quot;singleMachine&amp;quot;)
setwd(&amp;quot;SPrnaseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;download-a-specific-r-markdown-file&#34;&gt;Download a specific R Markdown file&lt;/h2&gt;
&lt;p&gt;Also, it is possible to download a specific workflow script for your analysis.
The URL can be specified under &lt;em&gt;&lt;code&gt;url&lt;/code&gt;&lt;/em&gt; argument and the R Markdown file name in
the &lt;em&gt;&lt;code&gt;urlname&lt;/code&gt;&lt;/em&gt; argument. The default &lt;em&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/em&gt; copies the current version available in the chose template.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;systemPipeR/SPrnaseq&amp;quot;, url = &amp;quot;https://raw.githubusercontent.com/systemPipeR/systemPipeRNAseq/cluster/vignettes/systemPipeRNAseq.Rmd&amp;quot;, 
             urlname = &amp;quot;rnaseq_V-cluster.Rmd&amp;quot;)
setwd(&amp;quot;rnaseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;dynamic-generation-of-workflow-template&#34;&gt;Dynamic generation of workflow template&lt;/h1&gt;
&lt;p&gt;It is possible to create a new workflow structure from RStudio
menu &lt;code&gt;File -&amp;gt; New File -&amp;gt; R Markdown -&amp;gt; From Template -&amp;gt; systemPipeR New WorkFlow&lt;/code&gt;.
This interactive option creates the same environment as demonstrated above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;results/rstudio.png&#34; alt=&#34;&#34;&gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; Selecting workflow template within RStudio.&lt;/p&gt;
&lt;h1 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h1&gt;
&lt;p&gt;The workflow templates generated by &lt;em&gt;&lt;code&gt;genWorkenvir&lt;/code&gt;&lt;/em&gt; contain the following preconfigured directory structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;workflow/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt; (&lt;em&gt;e.g.&lt;/em&gt; &lt;em&gt;rnaseq/&lt;/em&gt;)
&lt;ul&gt;
&lt;li&gt;This is the root directory of the R session running the workflow.&lt;/li&gt;
&lt;li&gt;Run script ( &lt;em&gt;*.Rmd&lt;/em&gt;) and sample annotation (&lt;em&gt;targets.txt&lt;/em&gt;) files are located here.&lt;/li&gt;
&lt;li&gt;Note, this directory can have any name (&lt;em&gt;e.g.&lt;/em&gt; &lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;rnaseq&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;, &lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;varseq&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;). Changing its name does not require any modifications in the run script(s).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Important subdirectories&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;param/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;Stores non-CWL parameter files such as: &lt;em&gt;*.param&lt;/em&gt;, &lt;em&gt;*.tmpl&lt;/em&gt; and &lt;em&gt;*.run.sh&lt;/em&gt;. These files are only required for backwards compatibility to run old workflows using the previous custom command-line interface.&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;param/cwl/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;: This subdirectory stores all the CWL parameter files. To organize workflows, each can have its own subdirectory, where all &lt;code&gt;CWL param&lt;/code&gt; and &lt;code&gt;input.yml&lt;/code&gt; files need to be in the same subdirectory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;data/&lt;/strong&gt;&lt;/em&gt; &lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;FASTQ files&lt;/li&gt;
&lt;li&gt;FASTA file of reference (&lt;em&gt;e.g.&lt;/em&gt; reference genome)&lt;/li&gt;
&lt;li&gt;Annotation files&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;results/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;Analysis results are usually written to this directory, including: alignment, variant and peak files (BAM, VCF, BED); tabular result files; and image/plot files&lt;/li&gt;
&lt;li&gt;Note, the user has the option to organize results files for a given sample and analysis step in a separate subdirectory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Directory names are indicated in &lt;span style=&#34;color:grey&#34;&gt;&lt;em&gt;&lt;strong&gt;green&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;.
Users can change this structure as needed, but need to adjust the code in their workflows
accordingly.&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;results/directory.png&#34;&gt;
&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;systemPipeR’s&lt;/em&gt; preconfigured directory structure.&lt;/p&gt;
&lt;h1 id=&#34;run-workflows&#34;&gt;Run workflows&lt;/h1&gt;
&lt;p&gt;Next, run from within R the chosen sample workflow by executing the code provided
in the corresponding &lt;em&gt;&lt;code&gt;*.Rmd&lt;/code&gt;* template file.
Much more detailed information on running and customizing &lt;/em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;*&lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html&#34;&gt;&lt;/a&gt;
workflows is available in its overview vignette &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html&#34;&gt;here&lt;/a&gt;.
This vignette can also be opened from R with the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;systemPipeR&amp;quot;)  # Loads systemPipeR which needs to be installed via BiocManager::install() from Bioconductor
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vignette(&amp;quot;systemPipeR&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;return-paths-to-sample-data&#34;&gt;Return paths to sample data&lt;/h2&gt;
&lt;p&gt;The location of the sample data provided by &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; can be returned as a &lt;em&gt;&lt;code&gt;list&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pathList()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $targets
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/param/targets.txt&amp;quot;
## 
## $targetsPE
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/param/targetsPE.txt&amp;quot;
## 
## $annotationdir
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/annotation/&amp;quot;
## 
## $fastqdir
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/fastq/&amp;quot;
## 
## $bamdir
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/bam/&amp;quot;
## 
## $paramdir
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/param/&amp;quot;
## 
## $workflows
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/&amp;quot;
## 
## $chipseq
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/chipseq/&amp;quot;
## 
## $rnaseq
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/rnaseq/&amp;quot;
## 
## $riboseq
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/riboseq/&amp;quot;
## 
## $varseq
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/varseq/&amp;quot;
## 
## $new
## [1] &amp;quot;/home/dcassol/src/R-devel/library/systemPipeRdata/extdata/workflows/new/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;create-a-small-rna-seq-data&#34;&gt;Create a small RNA-seq Data&lt;/h1&gt;
&lt;h2 id=&#34;download-ncbi-data&#34;&gt;Download NCBI data&lt;/h2&gt;
&lt;p&gt;The chosen data set &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/sra/?term=SRP010938&#34;&gt;&lt;code&gt;SRP010938&lt;/code&gt;&lt;/a&gt;
obtains 18 paired-end (PE) read sets from &lt;em&gt;Arabidposis thaliana&lt;/em&gt; (Howard et al. 2013).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP010938&amp;amp;o=acc_s%3Aa
targetspath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targetsPE.txt&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
targets &amp;lt;- read.delim(targetspath, comment.char = &amp;quot;#&amp;quot;)
systemPipeR::showDT(targets)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &#39;GGally&#39;:
##   method from   
##   +.gg   ggplot2
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;extensions&#34;:[&#34;FixedColumns&#34;,&#34;Scroller&#34;],&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;],[&#34;./data/SRR446027_1.fastq.gz&#34;,&#34;./data/SRR446028_1.fastq.gz&#34;,&#34;./data/SRR446029_1.fastq.gz&#34;,&#34;./data/SRR446030_1.fastq.gz&#34;,&#34;./data/SRR446031_1.fastq.gz&#34;,&#34;./data/SRR446032_1.fastq.gz&#34;,&#34;./data/SRR446033_1.fastq.gz&#34;,&#34;./data/SRR446034_1.fastq.gz&#34;,&#34;./data/SRR446035_1.fastq.gz&#34;,&#34;./data/SRR446036_1.fastq.gz&#34;,&#34;./data/SRR446037_1.fastq.gz&#34;,&#34;./data/SRR446038_1.fastq.gz&#34;,&#34;./data/SRR446039_1.fastq.gz&#34;,&#34;./data/SRR446040_1.fastq.gz&#34;,&#34;./data/SRR446041_1.fastq.gz&#34;,&#34;./data/SRR446042_1.fastq.gz&#34;,&#34;./data/SRR446043_1.fastq.gz&#34;,&#34;./data/SRR446044_1.fastq.gz&#34;],[&#34;./data/SRR446027_2.fastq.gz&#34;,&#34;./data/SRR446028_2.fastq.gz&#34;,&#34;./data/SRR446029_2.fastq.gz&#34;,&#34;./data/SRR446030_2.fastq.gz&#34;,&#34;./data/SRR446031_2.fastq.gz&#34;,&#34;./data/SRR446032_2.fastq.gz&#34;,&#34;./data/SRR446033_2.fastq.gz&#34;,&#34;./data/SRR446034_2.fastq.gz&#34;,&#34;./data/SRR446035_2.fastq.gz&#34;,&#34;./data/SRR446036_2.fastq.gz&#34;,&#34;./data/SRR446037_2.fastq.gz&#34;,&#34;./data/SRR446038_2.fastq.gz&#34;,&#34;./data/SRR446039_2.fastq.gz&#34;,&#34;./data/SRR446040_2.fastq.gz&#34;,&#34;./data/SRR446041_2.fastq.gz&#34;,&#34;./data/SRR446042_2.fastq.gz&#34;,&#34;./data/SRR446043_2.fastq.gz&#34;,&#34;./data/SRR446044_2.fastq.gz&#34;],[&#34;M1A&#34;,&#34;M1B&#34;,&#34;A1A&#34;,&#34;A1B&#34;,&#34;V1A&#34;,&#34;V1B&#34;,&#34;M6A&#34;,&#34;M6B&#34;,&#34;A6A&#34;,&#34;A6B&#34;,&#34;V6A&#34;,&#34;V6B&#34;,&#34;M12A&#34;,&#34;M12B&#34;,&#34;A12A&#34;,&#34;A12B&#34;,&#34;V12A&#34;,&#34;V12B&#34;],[&#34;M1&#34;,&#34;M1&#34;,&#34;A1&#34;,&#34;A1&#34;,&#34;V1&#34;,&#34;V1&#34;,&#34;M6&#34;,&#34;M6&#34;,&#34;A6&#34;,&#34;A6&#34;,&#34;V6&#34;,&#34;V6&#34;,&#34;M12&#34;,&#34;M12&#34;,&#34;A12&#34;,&#34;A12&#34;,&#34;V12&#34;,&#34;V12&#34;],[&#34;Mock.1h.A&#34;,&#34;Mock.1h.B&#34;,&#34;Avr.1h.A&#34;,&#34;Avr.1h.B&#34;,&#34;Vir.1h.A&#34;,&#34;Vir.1h.B&#34;,&#34;Mock.6h.A&#34;,&#34;Mock.6h.B&#34;,&#34;Avr.6h.A&#34;,&#34;Avr.6h.B&#34;,&#34;Vir.6h.A&#34;,&#34;Vir.6h.B&#34;,&#34;Mock.12h.A&#34;,&#34;Mock.12h.B&#34;,&#34;Avr.12h.A&#34;,&#34;Avr.12h.B&#34;,&#34;Vir.12h.A&#34;,&#34;Vir.12h.B&#34;],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;FileName1&lt;\/th&gt;\n      &lt;th&gt;FileName2&lt;\/th&gt;\n      &lt;th&gt;SampleName&lt;\/th&gt;\n      &lt;th&gt;Factor&lt;\/th&gt;\n      &lt;th&gt;SampleLong&lt;\/th&gt;\n      &lt;th&gt;Experiment&lt;\/th&gt;\n      &lt;th&gt;Date&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;scrollX&#34;:true,&#34;fixedColumns&#34;:true,&#34;deferRender&#34;:true,&#34;scrollY&#34;:200,&#34;scroller&#34;:true,&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:6},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Create a SYSargs2 object and populate all the command-line
dir_path &amp;lt;- system.file(&amp;quot;extdata/cwl/fastq-dump&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
WF &amp;lt;- systemPipeR::loadWF(targets = targetspath, wf_file = &amp;quot;fastq-dump.cwl&amp;quot;, 
    input_file = &amp;quot;fastq-dump.yml&amp;quot;, dir_path = dir_path)
WF &amp;lt;- renderWF(WF, inputvars = c(FileName = &amp;quot;_FASTQ_PATH1_&amp;quot;, 
    SampleName = &amp;quot;_SampleName_&amp;quot;))
cmdlist(WF)
output(WF)
runCommandline(WF, make_bam = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-targets-file&#34;&gt;Create targets file&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;targetspath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;targetsPE.txt&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
targets &amp;lt;- read.delim(targetspath, comment.char = &amp;quot;#&amp;quot;)
systemPipeR::showDT(targets)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;extensions&#34;:[&#34;FixedColumns&#34;,&#34;Scroller&#34;],&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;],[&#34;./data/SRR446027_1.fastq.gz&#34;,&#34;./data/SRR446028_1.fastq.gz&#34;,&#34;./data/SRR446029_1.fastq.gz&#34;,&#34;./data/SRR446030_1.fastq.gz&#34;,&#34;./data/SRR446031_1.fastq.gz&#34;,&#34;./data/SRR446032_1.fastq.gz&#34;,&#34;./data/SRR446033_1.fastq.gz&#34;,&#34;./data/SRR446034_1.fastq.gz&#34;,&#34;./data/SRR446035_1.fastq.gz&#34;,&#34;./data/SRR446036_1.fastq.gz&#34;,&#34;./data/SRR446037_1.fastq.gz&#34;,&#34;./data/SRR446038_1.fastq.gz&#34;,&#34;./data/SRR446039_1.fastq.gz&#34;,&#34;./data/SRR446040_1.fastq.gz&#34;,&#34;./data/SRR446041_1.fastq.gz&#34;,&#34;./data/SRR446042_1.fastq.gz&#34;,&#34;./data/SRR446043_1.fastq.gz&#34;,&#34;./data/SRR446044_1.fastq.gz&#34;],[&#34;./data/SRR446027_2.fastq.gz&#34;,&#34;./data/SRR446028_2.fastq.gz&#34;,&#34;./data/SRR446029_2.fastq.gz&#34;,&#34;./data/SRR446030_2.fastq.gz&#34;,&#34;./data/SRR446031_2.fastq.gz&#34;,&#34;./data/SRR446032_2.fastq.gz&#34;,&#34;./data/SRR446033_2.fastq.gz&#34;,&#34;./data/SRR446034_2.fastq.gz&#34;,&#34;./data/SRR446035_2.fastq.gz&#34;,&#34;./data/SRR446036_2.fastq.gz&#34;,&#34;./data/SRR446037_2.fastq.gz&#34;,&#34;./data/SRR446038_2.fastq.gz&#34;,&#34;./data/SRR446039_2.fastq.gz&#34;,&#34;./data/SRR446040_2.fastq.gz&#34;,&#34;./data/SRR446041_2.fastq.gz&#34;,&#34;./data/SRR446042_2.fastq.gz&#34;,&#34;./data/SRR446043_2.fastq.gz&#34;,&#34;./data/SRR446044_2.fastq.gz&#34;],[&#34;M1A&#34;,&#34;M1B&#34;,&#34;A1A&#34;,&#34;A1B&#34;,&#34;V1A&#34;,&#34;V1B&#34;,&#34;M6A&#34;,&#34;M6B&#34;,&#34;A6A&#34;,&#34;A6B&#34;,&#34;V6A&#34;,&#34;V6B&#34;,&#34;M12A&#34;,&#34;M12B&#34;,&#34;A12A&#34;,&#34;A12B&#34;,&#34;V12A&#34;,&#34;V12B&#34;],[&#34;M1&#34;,&#34;M1&#34;,&#34;A1&#34;,&#34;A1&#34;,&#34;V1&#34;,&#34;V1&#34;,&#34;M6&#34;,&#34;M6&#34;,&#34;A6&#34;,&#34;A6&#34;,&#34;V6&#34;,&#34;V6&#34;,&#34;M12&#34;,&#34;M12&#34;,&#34;A12&#34;,&#34;A12&#34;,&#34;V12&#34;,&#34;V12&#34;],[&#34;Mock.1h.A&#34;,&#34;Mock.1h.B&#34;,&#34;Avr.1h.A&#34;,&#34;Avr.1h.B&#34;,&#34;Vir.1h.A&#34;,&#34;Vir.1h.B&#34;,&#34;Mock.6h.A&#34;,&#34;Mock.6h.B&#34;,&#34;Avr.6h.A&#34;,&#34;Avr.6h.B&#34;,&#34;Vir.6h.A&#34;,&#34;Vir.6h.B&#34;,&#34;Mock.12h.A&#34;,&#34;Mock.12h.B&#34;,&#34;Avr.12h.A&#34;,&#34;Avr.12h.B&#34;,&#34;Vir.12h.A&#34;,&#34;Vir.12h.B&#34;],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;,&#34;23-Mar-2012&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;FileName1&lt;\/th&gt;\n      &lt;th&gt;FileName2&lt;\/th&gt;\n      &lt;th&gt;SampleName&lt;\/th&gt;\n      &lt;th&gt;Factor&lt;\/th&gt;\n      &lt;th&gt;SampleLong&lt;\/th&gt;\n      &lt;th&gt;Experiment&lt;\/th&gt;\n      &lt;th&gt;Date&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;scrollX&#34;:true,&#34;fixedColumns&#34;:true,&#34;deferRender&#34;:true,&#34;scrollY&#34;:200,&#34;scroller&#34;:true,&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:6},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h2 id=&#34;mapping&#34;&gt;Mapping&lt;/h2&gt;
&lt;p&gt;Build Index:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;idx &amp;lt;- loadWF(targets = NULL, wf_file = &amp;quot;hisat2-index.cwl&amp;quot;, input_file = &amp;quot;hisat2-index.yml&amp;quot;, 
    dir_path = &amp;quot;param/cwl/hisat2/hisat2-idx/&amp;quot;)
idx &amp;lt;- renderWF(idx)
idx
cmdlist(idx)

library(batchtools)
resources &amp;lt;- list(walltime = 1200, ntasks = 1, ncpus = 14, memory = 20480)
reg &amp;lt;- clusterRun(idx, FUN = runCommandline, more.args = list(args = idx, 
    dir = FALSE, make_bam = FALSE), conffile = &amp;quot;.batchtools.conf.R&amp;quot;, 
    template = &amp;quot;batchtools.slurm.tmpl&amp;quot;, Njobs = 1, runid = &amp;quot;01&amp;quot;, 
    resourceList = resources)
getStatus(reg = reg)
waitForJobs(reg = reg)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;mapping-1&#34;&gt;Mapping&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Build WF
align &amp;lt;- loadWF(targets = targetspath, wf_file = &amp;quot;hisat2-mapping-pe.cwl&amp;quot;, 
    input_file = &amp;quot;hisat2-mapping-pe.yml&amp;quot;, dir_path = &amp;quot;param/cwl/hisat2/hisat2-pe/&amp;quot;)
align &amp;lt;- renderWF(align, inputvars = c(FileName1 = &amp;quot;_FASTQ_PATH1_&amp;quot;, 
    FileName2 = &amp;quot;_FASTQ_PATH2_&amp;quot;, SampleName = &amp;quot;_SampleName_&amp;quot;))
align
cmdlist(align)[1:2]
output(align)[1:2]

## Run
library(batchtools)
resources &amp;lt;- list(walltime = 1200, ntasks = 1, ncpus = 14, memory = 20480)
reg &amp;lt;- clusterRun(align, FUN = runCommandline, more.args = list(args = align, 
    dir = FALSE), conffile = &amp;quot;.batchtools.conf.R&amp;quot;, template = &amp;quot;batchtools.slurm.tmpl&amp;quot;, 
    Njobs = 18, runid = &amp;quot;01&amp;quot;, resourceList = resources)
getStatus(reg = reg)
waitForJobs(reg = reg)
align &amp;lt;- output_update(align, replace = TRUE, dir = FALSE, extension = c(&amp;quot;.sam&amp;quot;, 
    &amp;quot;.bam&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;subset-reads-by-mapping-region&#34;&gt;Subset reads by Mapping Region&lt;/h2&gt;
&lt;p&gt;To minimize processing time during testing, each FASTQ file has been subsetted to
800-900 randomly sampled PE reads that map to the first 900 nucleotides
of each chromosome of the &lt;em&gt;A. thalina&lt;/em&gt; genome.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;getSubsetReads(align, MappingRegion = 1:900, sample_range = 800:900, 
    outdir = &amp;quot;data/subset/&amp;quot;, silent = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;subset-reads-by-genes-list&#34;&gt;Subset reads by Genes List&lt;/h2&gt;
&lt;p&gt;Select genes upregulated by DEG analysis with &lt;em&gt;&lt;code&gt;DESeq2&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(DESeq2)
targets &amp;lt;- read.delim(targetspath, comment = &amp;quot;#&amp;quot;)
cmp &amp;lt;- readComp(file = targetspath, format = &amp;quot;matrix&amp;quot;, delim = &amp;quot;-&amp;quot;)
cmp[[1]]
countDFeBygpath &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;countDFeByg.xls&amp;quot;, 
    package = &amp;quot;systemPipeR&amp;quot;)
countDFeByg &amp;lt;- read.delim(countDFeBygpath, row.names = 1)
degseqDF &amp;lt;- run_DESeq2(countDF = countDFeByg, targets = targets, 
    cmp = cmp[[1]], independent = FALSE)
DEG_list &amp;lt;- filterDEGs(degDF = degseqDF, filter = c(Fold = 2, 
    FDR = 10))  ## filter
list &amp;lt;- unique(unlist(DEG_list$Up))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;getSubsetReads(align, geneList = list, MappingRegion = NULL, 
    sample_range = NULL, outdir = &amp;quot;data/subset/&amp;quot;, silent = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;version-information&#34;&gt;Version information&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R Under development (unstable) (2021-02-04 r79940)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 20.04.2 LTS
## 
## Matrix products: default
## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
## LAPACK: /home/dcassol/src/R-devel/lib/libRlapack.so
## 
## locale:
##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets 
## [6] methods   base     
## 
## other attached packages:
## [1] systemPipeRdata_1.19.1 BiocStyle_2.19.2      
## 
## loaded via a namespace (and not attached):
##   [1] backports_1.2.1            
##   [2] BiocFileCache_1.99.5       
##   [3] plyr_1.8.6                 
##   [4] lazyeval_0.2.2             
##   [5] splines_4.1.0              
##   [6] crosstalk_1.1.1            
##   [7] BiocParallel_1.25.5        
##   [8] GenomeInfoDb_1.27.11       
##   [9] ggplot2_3.3.3              
##  [10] digest_0.6.27              
##  [11] htmltools_0.5.1.1          
##  [12] fansi_0.4.2                
##  [13] magrittr_2.0.1             
##  [14] checkmate_2.0.0            
##  [15] memoise_2.0.0              
##  [16] BSgenome_1.59.2            
##  [17] base64url_1.4              
##  [18] limma_3.47.12              
##  [19] remotes_2.3.0              
##  [20] Biostrings_2.59.2          
##  [21] annotate_1.69.2            
##  [22] matrixStats_0.58.0         
##  [23] systemPipeR_1.25.12        
##  [24] prettyunits_1.1.1          
##  [25] jpeg_0.1-8.1               
##  [26] colorspace_2.0-0           
##  [27] blob_1.2.1                 
##  [28] rappdirs_0.3.3             
##  [29] ggrepel_0.9.1              
##  [30] xfun_0.22                  
##  [31] dplyr_1.0.5                
##  [32] crayon_1.4.1               
##  [33] RCurl_1.98-1.3             
##  [34] jsonlite_1.7.2             
##  [35] genefilter_1.73.1          
##  [36] VariantAnnotation_1.37.1   
##  [37] brew_1.0-6                 
##  [38] survival_3.2-10            
##  [39] ape_5.4-1                  
##  [40] glue_1.4.2                 
##  [41] gtable_0.3.0               
##  [42] zlibbioc_1.37.0            
##  [43] XVector_0.31.1             
##  [44] DelayedArray_0.17.10       
##  [45] V8_3.4.0                   
##  [46] BiocGenerics_0.37.1        
##  [47] scales_1.1.1               
##  [48] pheatmap_1.0.12            
##  [49] DBI_1.1.1                  
##  [50] GGally_2.1.1               
##  [51] edgeR_3.33.3               
##  [52] Rcpp_1.0.6                 
##  [53] viridisLite_0.4.0          
##  [54] xtable_1.8-4               
##  [55] progress_1.2.2             
##  [56] tidytree_0.3.3             
##  [57] bit_4.0.4                  
##  [58] DT_0.18                    
##  [59] rsvg_2.1                   
##  [60] stats4_4.1.0               
##  [61] htmlwidgets_1.5.3          
##  [62] httr_1.4.2                 
##  [63] RColorBrewer_1.1-2         
##  [64] ellipsis_0.3.1             
##  [65] pkgconfig_2.0.3            
##  [66] reshape_0.8.8              
##  [67] XML_3.99-0.6               
##  [68] sass_0.3.1                 
##  [69] dbplyr_2.1.1               
##  [70] locfit_1.5-9.4             
##  [71] utf8_1.2.1                 
##  [72] later_1.1.0.1              
##  [73] tidyselect_1.1.0           
##  [74] rlang_0.4.10               
##  [75] AnnotationDbi_1.53.1       
##  [76] munsell_0.5.0              
##  [77] tools_4.1.0                
##  [78] cachem_1.0.4               
##  [79] generics_0.1.0             
##  [80] RSQLite_2.2.6              
##  [81] evaluate_0.14              
##  [82] stringr_1.4.0              
##  [83] fastmap_1.1.0              
##  [84] yaml_2.2.1                 
##  [85] ggtree_2.5.2               
##  [86] knitr_1.32                 
##  [87] bit64_4.0.5                
##  [88] purrr_0.3.4                
##  [89] KEGGREST_1.31.1            
##  [90] nlme_3.1-152               
##  [91] mime_0.10                  
##  [92] formatR_1.9                
##  [93] aplot_0.0.6                
##  [94] biomaRt_2.47.7             
##  [95] compiler_4.1.0             
##  [96] plotly_4.9.3               
##  [97] filelock_1.0.2             
##  [98] curl_4.3                   
##  [99] png_0.1-7                  
## [100] treeio_1.15.6              
## [101] tibble_3.1.0               
## [102] geneplotter_1.69.0         
## [103] bslib_0.2.4                
## [104] stringi_1.5.3              
## [105] blogdown_1.3               
## [106] GenomicFeatures_1.43.8     
## [107] lattice_0.20-41            
## [108] Matrix_1.3-2               
## [109] glmpca_0.2.0               
## [110] vctrs_0.3.7                
## [111] pillar_1.6.0               
## [112] lifecycle_1.0.0            
## [113] BiocManager_1.30.12        
## [114] jquerylib_0.1.3            
## [115] data.table_1.14.0          
## [116] bitops_1.0-6               
## [117] httpuv_1.5.5               
## [118] patchwork_1.1.1            
## [119] rtracklayer_1.51.5         
## [120] GenomicRanges_1.43.4       
## [121] latticeExtra_0.6-29        
## [122] hwriter_1.3.2              
## [123] R6_2.5.0                   
## [124] BiocIO_1.1.2               
## [125] promises_1.2.0.1           
## [126] ShortRead_1.49.2           
## [127] bookdown_0.21              
## [128] IRanges_2.25.8             
## [129] codetools_0.2-18           
## [130] MASS_7.3-53.1              
## [131] assertthat_0.2.1           
## [132] SummarizedExperiment_1.21.3
## [133] DESeq2_1.31.18             
## [134] rjson_0.2.20               
## [135] withr_2.4.1                
## [136] GenomicAlignments_1.27.2   
## [137] batchtools_0.9.15          
## [138] Rsamtools_2.7.2            
## [139] S4Vectors_0.29.15          
## [140] GenomeInfoDbData_1.2.4     
## [141] parallel_4.1.0             
## [142] hms_1.0.0                  
## [143] grid_4.1.0                 
## [144] tidyr_1.1.3                
## [145] DOT_0.1                    
## [146] rmarkdown_2.7              
## [147] rvcheck_0.1.8              
## [148] MatrixGenerics_1.3.1       
## [149] Rtsne_0.15                 
## [150] shiny_1.6.0                
## [151] Biobase_2.51.0             
## [152] restfulr_0.0.13
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;funding&#34;&gt;Funding&lt;/h1&gt;
&lt;p&gt;This project was supported by funds from the National Institutes of Health (NIH) and the National Science Foundation (NSF).&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;div id=&#34;refs&#34; class=&#34;references csl-bib-body hanging-indent&#34;&gt;
&lt;div id=&#34;ref-H_Backman2016-bt&#34; class=&#34;csl-entry&#34;&gt;
&lt;p&gt;H Backman, Tyler W, and Thomas Girke. 2016. “&lt;span class=&#34;nocase&#34;&gt;systemPipeR: NGS workflow and report generation environment&lt;/span&gt;.” &lt;em&gt;BMC Bioinformatics&lt;/em&gt; 17 (1): 388. &lt;a href=&#34;https://doi.org/10.1186/s12859-016-1241-0&#34;&gt;https://doi.org/10.1186/s12859-016-1241-0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Howard2013-fq&#34; class=&#34;csl-entry&#34;&gt;
&lt;p&gt;Howard, Brian E, Qiwen Hu, Ahmet Can Babaoglu, Manan Chandra, Monica Borghi, Xiaoping Tan, Luyan He, et al. 2013. “High-Throughput RNA Sequencing of Pseudomonas-Infected Arabidopsis Reveals Hidden Transcriptome Complexity and Novel Splice Variants.” &lt;em&gt;PLoS One&lt;/em&gt; 8 (10): e74183. &lt;a href=&#34;https://doi.org/10.1371/journal.pone.0074183&#34;&gt;https://doi.org/10.1371/journal.pone.0074183&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Spr: Rules to create a new Workflow Template</title>
      <link>/spr/systempiperdata/newwf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/spr/systempiperdata/newwf/</guid>
      <description>
        
        
        &lt;h1 id=&#34;how-to-create-a-new-workflow-template&#34;&gt;How to create a new Workflow Template&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;SPRthis&lt;/code&gt; package expand &lt;a href=&#34;https://github.com/r-lib/usethis&#34;&gt;usethis&lt;/a&gt; package, providing automation to create &lt;a href=&#34;https://github.com/tgirke/systemPipeR&#34;&gt;systemPipeR&lt;/a&gt; workflows templates.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install &lt;code&gt;SPRthis&lt;/code&gt; using from &lt;code&gt;BiocManager&lt;/code&gt; the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE)) {
  install.packages(&amp;quot;BiocManager&amp;quot;)
  BiocManager::install(&amp;quot;dcassol/SPRthis&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;quick-start-to-using-to-sprthis&#34;&gt;Quick start to using to &lt;code&gt;SPRthis&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Load the package
library(SPRthis)
## create Package
sprthis(wfName=&amp;quot;SPRtest&amp;quot;, analysis=&amp;quot;SPRtest&amp;quot;, path=tempdir())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ Setting active project to &#39;/tmp/RtmpunjAF9&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ Creating &#39;R/&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ Writing &#39;DESCRIPTION&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Package: SPRtest
## Title: SPRtest
## Version: 0.9.0
## Authors@R (parsed):
##     * First Last &amp;lt;first.last@example.com&amp;gt; [aut, cre] (YOUR-ORCID-ID)
## Description: This package provides a pre-configured workflow and reporting
##     template for SPRtest.
## License: Artistic-2.0
## URL: https://github.com/systemPipeR/SPRtest
## Imports:
##     systemPipeR (&amp;gt;= 1.25.0)
## Suggests:
##     BiocStyle,
##     knitr,
##     rmarkdown
## VignetteBuilder:
##     knitr
## biocViews: Infrastructure, ...
## Encoding: UTF-8
## LazyData: true
## Roxygen: list(markdown = TRUE)
## RoxygenNote: 7.1.1
## SystemRequirements: SPRtest can be used to run external command-line
##     software, but the corresponding tool needs to be installed on a
##     system.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ Writing &#39;NAMESPACE&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ Setting active project to &#39;&amp;lt;no active project&amp;gt;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;/tmp/RtmpunjAF9&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;
SPRtest/  
├── DESCRIPTION 
├── NAMESPACE 
├── README.md 
├── SPRtest.Rproj 
├── .gitignore
├── .Rbuildignore
├── .Rproj.user/  
├── R/
│   ├── functions.R
├── vignettes 
│   ├── bibtex.bib
│   ├── SPRtest.Rmd  
└── inst 
    ├── rmarkdown 
    │   └── templates
    │       └── SPRtest
    │           ├── template.yml
    │           └── skeleton
    │                 ├── batchtools.slurm.tmpl
    │                 ├── .batchtools.conf.R
    │                 ├── bibtex.bib 
    │                 ├── NEWS
    │                 ├── SPRconfig.yml
    │                 ├── skeleton.Rmd 
    │                 ├── targetsPE.txt 
    │                 ├── data/
    │                 ├── param/
    │                 └── results/
&lt;/pre&gt;
&lt;h1 id=&#34;help-functions-to-create-the-package&#34;&gt;Help functions to create the package&lt;/h1&gt;
&lt;h2 id=&#34;create-the-webiste-for-the-package-with-pkgdown&#34;&gt;Create the webiste for the package with &lt;code&gt;pkgdown&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Edit the &lt;code&gt;_pkgdown.yml&lt;/code&gt; file and run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pkgdown::build_site() 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;documentation-with-roxygen2&#34;&gt;Documentation with &lt;code&gt;roxygen2&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;roxygen2::roxygenise()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;testing-the-code-with-testthat&#34;&gt;Testing the code with &lt;code&gt;testthat&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;To test the code, you can run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::test()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;update-r-markdown-template-on-skeleton&#34;&gt;Update R Markdown template on &lt;code&gt;skeleton&lt;/code&gt;&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;path &amp;lt;- file.path(&amp;quot;vignettes/SPRtest.Rmd&amp;quot;)
skeleton_update(path)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;package-available-to-genworkenvir-function&#34;&gt;Package available to &lt;code&gt;genWorkenvir&lt;/code&gt; Function&lt;/h1&gt;
&lt;p&gt;After creating the new repository on GitHub &lt;a href=&#34;https://github.com/systemPipeR&#34;&gt;systemPipeR Organization&lt;/a&gt;,
please follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rules:
&lt;ul&gt;
&lt;li&gt;The Workflow Template need to be available under &lt;a href=&#34;https://github.com/systemPipeR/&#34;&gt;systemPipeR Organization&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;The repository needs to be &lt;code&gt;public&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;About setting:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Description&lt;/code&gt;: keywords in the description are required: &amp;ldquo;Workflow Template&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Topics&lt;/code&gt;: we expected &amp;ldquo;systempiper&amp;rdquo; and &amp;ldquo;release&amp;rdquo; or &amp;ldquo;development&amp;rdquo; words on Topics section;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Branch name: To make simple, please name the branch as &amp;ldquo;master&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;check-availability-of-workflow-templates&#34;&gt;Check availability of workflow templates&lt;/h2&gt;
&lt;p&gt;A collection of workflow templates are available, and it is possible to browse the
current availability, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;systemPipeRdata::availableWF(github = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $systemPipeRdata
## [1] &amp;quot;chipseq&amp;quot; &amp;quot;new&amp;quot;     &amp;quot;riboseq&amp;quot; &amp;quot;rnaseq&amp;quot;  &amp;quot;varseq&amp;quot; 
## 
## $github
##                  workflow                       branches version
## 1   systemPipeR/SPchipseq                         master release
## 2   systemPipeR/SPriboseq                         master release
## 3    systemPipeR/SPrnaseq cluster, master, singleMachine release
## 4    systemPipeR/SPvarseq                         master release
## 5   systemPipeR/SPclipseq                         master   devel
## 6    systemPipeR/SPdenovo                         master   devel
## 7 systemPipeR/SPmetatrans                         master   devel
## 8 systemPipeR/SPmethylseq                         master   devel
## 9  systemPipeR/SPmirnaseq                         master   devel
##                                         html       description
## 1   https://github.com/systemPipeR/SPchipseq Workflow Template
## 2   https://github.com/systemPipeR/SPriboseq Workflow Template
## 3    https://github.com/systemPipeR/SPrnaseq Workflow Template
## 4    https://github.com/systemPipeR/SPvarseq Workflow Template
## 5   https://github.com/systemPipeR/SPclipseq Workflow Template
## 6    https://github.com/systemPipeR/SPdenovo Workflow Template
## 7 https://github.com/systemPipeR/SPmetatrans Workflow Template
## 8 https://github.com/systemPipeR/SPmethylseq Workflow Template
## 9  https://github.com/systemPipeR/SPmirnaseq Workflow Template
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function returns the list of workflow templates available within the package
and &lt;a href=&#34;https://github.com/systemPipeR&#34;&gt;systemPipeR Project Organization&lt;/a&gt; on GitHub. Each one
listed template can be created as described above.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
