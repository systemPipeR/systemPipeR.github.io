<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>systemPipeR – systemPipeRdata</title>
    <link>/spr/systempiperdata/</link>
    <description>Recent content in systemPipeRdata on systemPipeR</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/spr/systempiperdata/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Spr: systemPipeRdata: Workflow templates and sample data</title>
      <link>/spr/systempiperdata/vignette/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/spr/systempiperdata/vignette/</guid>
      <description>
        
        
        &lt;style type=&#34;text/css&#34;&gt;
pre code {
white-space: pre !important;
overflow-x: scroll !important;
word-break: keep-all !important;
word-wrap: initial !important;
}
&lt;/style&gt;
&lt;!---
- Compile from command-line
Rscript -e &#34;rmarkdown::render(&#39;systemPipeRdata.Rmd&#39;, c(&#39;BiocStyle::html_document&#39;), clean=F); knitr::knit(&#39;systemPipeRdata.Rmd&#39;, tangle=TRUE)&#34;; Rscript -e &#34;rmarkdown::render(&#39;systemPipeRdata.Rmd&#39;, c(&#39;BiocStyle::pdf_document&#39;))&#34;

- Commit to github
git commit -am &#34;some edits&#34;; git push -u origin master
--&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
  document.querySelector(&#34;h1&#34;).className = &#34;title&#34;;
});
&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
  var links = document.links;  
  for (var i = 0, linksLength = links.length; i &lt; linksLength; i++)
    if (links[i].hostname != window.location.hostname)
      links[i].target = &#39;_blank&#39;;
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the most recent version of this vignette can be found &lt;a href=&#34;https://github.com/tgirke/systemPipeRdata/blob/master/vignettes/systemPipeRdata.Rmd&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if you use &lt;em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; in published research, please cite:&lt;/p&gt;
&lt;p&gt;Backman, T.W.H and Girke, T. (2016). &lt;em&gt;systemPipeR&lt;/em&gt;: Workflow and Report Generation Environment. &lt;em&gt;BMC Bioinformatics&lt;/em&gt;, 17: 388. &lt;a href=&#34;https://doi.org/10.1186/s12859-016-1241-0&#34;&gt;10.1186/s12859-016-1241-0&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tgirke/systemPipeRdata&#34;&gt;&lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt;&lt;/a&gt; is a helper package
to generate with a single command workflow templates that are intended to be
used by its parent package &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html&#34;&gt;&lt;em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;&lt;/em&gt;&lt;/a&gt; (H Backman and Girke 2016).
The &lt;em&gt;systemPipeR&lt;/em&gt; project provides a suite of R/Bioconductor packages for designing,
building and running end-to-end analysis workflows on local machines, HPC clusters
and cloud systems, while generating at the same time publication quality analysis reports.&lt;/p&gt;
&lt;p&gt;To test workflows quickly or design new ones from existing templates, users can
generate with a single command workflow instances fully populated with sample data
and parameter files required for running a chosen workflow.
Pre-configured directory structure of the workflow environment and the sample data
used by &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; are described &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html#load-sample-data-and-workflow-templates&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; package is available at &lt;a href=&#34;http://www.bioconductor.org/packages/release/data/experiment/html/systemPipeRdata.html&#34;&gt;Bioconductor&lt;/a&gt; and can be installed from within R as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE)) install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, it is possible to install the development version from &lt;a href=&#34;http://www.bioconductor.org/packages/devel/data/experiment/html/systemPipeRdata.html&#34;&gt;Bioconductor&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;BiocManager::install(&amp;quot;systemPipeRdata&amp;quot;, version = &amp;quot;devel&amp;quot;, build_vignettes = TRUE, 
    dependencies = TRUE)  # Installs Devel version from Bioconductor
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;loading-package-and-documentation&#34;&gt;Loading package and documentation&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;systemPipeRdata&amp;quot;)  # Loads the package
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(help = &amp;quot;systemPipeRdata&amp;quot;)  # Lists package info
vignette(&amp;quot;systemPipeRdata&amp;quot;)  # Opens vignette
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;starting-with-pre-configured-workflow-templates&#34;&gt;Starting with pre-configured workflow templates&lt;/h2&gt;
&lt;p&gt;Load one of the available workflows into your current working directory.
The following does this for the &lt;em&gt;&lt;code&gt;varseq&lt;/code&gt;&lt;/em&gt; workflow template. The name of the resulting
workflow directory can be specified under the &lt;em&gt;&lt;code&gt;mydirname&lt;/code&gt;&lt;/em&gt; argument. The default &lt;em&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/em&gt;
uses the name of the chosen workflow. An error is issued if a directory of the same
name and path exists already.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow = &amp;quot;varseq&amp;quot;, mydirname = NULL)
setwd(&amp;quot;varseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Linux and OS X systems the same can be achieved from the command-line of a terminal with the following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ Rscript -e &amp;quot;systemPipeRdata::genWorkenvir(workflow=&#39;varseq&#39;, mydirname=NULL)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;workflow-templates-collection&#34;&gt;Workflow templates collection&lt;/h1&gt;
&lt;p&gt;A collection of workflow templates are available, and it is possible to browse the
current availability, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;availableWF(github = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $systemPipeRdata
## [1] &amp;quot;chipseq&amp;quot; &amp;quot;new&amp;quot;     &amp;quot;riboseq&amp;quot; &amp;quot;rnaseq&amp;quot;  &amp;quot;varseq&amp;quot; 
## 
## $github
##                          workflow
## 1   systemPipeR/systemPipeChIPseq
## 2   systemPipeR/systemPipeRIBOseq
## 3    systemPipeR/systemPipeRNAseq
## 4    systemPipeR/systemPipeVARseq
## 5   systemPipeR/systemPipeCLIPseq
## 6    systemPipeR/systemPipeDeNovo
## 7 systemPipeR/systemPipeMetaTrans
## 8 systemPipeR/systemPipeMethylseq
##                         branches version
## 1                         master release
## 2                         master release
## 3 cluster, master, singleMachine release
## 4                         master release
## 5                         master   devel
## 6                         master   devel
## 7                         master   devel
## 8                         master   devel
##                                                 html
## 1   https://github.com/systemPipeR/systemPipeChIPseq
## 2   https://github.com/systemPipeR/systemPipeRIBOseq
## 3    https://github.com/systemPipeR/systemPipeRNAseq
## 4    https://github.com/systemPipeR/systemPipeVARseq
## 5   https://github.com/systemPipeR/systemPipeCLIPseq
## 6    https://github.com/systemPipeR/systemPipeDeNovo
## 7 https://github.com/systemPipeR/systemPipeMetaTrans
## 8 https://github.com/systemPipeR/systemPipeMethylseq
##         description
## 1 Workflow Template
## 2 Workflow Template
## 3 Workflow Template
## 4 Workflow Template
## 5 Workflow Template
## 6 Workflow Template
## 7 Workflow Template
## 8 Workflow Template
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function returns the list of workflow templates available within the package
and &lt;a href=&#34;https://github.com/systemPipeR&#34;&gt;systemPipeR Organization&lt;/a&gt; on GitHub. Each one
listed template can be created as described above.&lt;/p&gt;
&lt;p&gt;The workflow template choose from Github will be installed as an R package, and
also it creates the environment with all the settings and files to run the demo
analysis&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;systemPipeR/systemPipeVARseq&amp;quot;, mydirname=&amp;quot;NULL&amp;quot;)
setwd(&amp;quot;systemPipeVARseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Besides, it is possible to choose different versions of the workflow template,
defined through other branches on the GitHub Repository. By default, the &lt;em&gt;&lt;code&gt;master&lt;/code&gt;&lt;/em&gt;
branch is selected, however, it is possible to define a different branch with the &lt;em&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/em&gt; argument.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;systemPipeR/systemPipeRNAseq&amp;quot;, ref = &amp;quot;singleMachine&amp;quot;)
setwd(&amp;quot;systemPipeRNAseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;download-a-specific-r-markdown-file&#34;&gt;Download a specific R Markdown file&lt;/h2&gt;
&lt;p&gt;Also, it is possible to download a specific workflow script for your analysis.
The URL can be specified under &lt;em&gt;&lt;code&gt;url&lt;/code&gt;&lt;/em&gt; argument and the R Markdown file name in
the &lt;em&gt;&lt;code&gt;urlname&lt;/code&gt;&lt;/em&gt; argument. The default &lt;em&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/em&gt; copies the current version available in the chose template.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;genWorkenvir(workflow=&amp;quot;rnaseq&amp;quot;, url = &amp;quot;https://raw.githubusercontent.com/systemPipeR/systemPipeRNAseq/cluster/vignettes/systemPipeRNAseq.Rmd&amp;quot;, 
             urlname = &amp;quot;rnaseq_V-cluster.Rmd&amp;quot;)
setwd(&amp;quot;rnaseq&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;dynamic-generation-of-workflow-template&#34;&gt;Dynamic generation of workflow template&lt;/h1&gt;
&lt;p&gt;It is possible to create a new workflow structure from RStudio
menu &lt;code&gt;File -&amp;gt; New File -&amp;gt; R Markdown -&amp;gt; From Template -&amp;gt; systemPipeR New WorkFlow&lt;/code&gt;.
This interactive option creates the same environment as demonstrated above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;results/rstudio.png&#34; alt=&#34;&#34;&gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; Selecting workflow template within RStudio.&lt;/p&gt;
&lt;h1 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h1&gt;
&lt;p&gt;The workflow templates generated by &lt;em&gt;&lt;code&gt;genWorkenvir&lt;/code&gt;&lt;/em&gt; contain the following preconfigured directory structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;workflow/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt; (&lt;em&gt;e.g.&lt;/em&gt; &lt;em&gt;rnaseq/&lt;/em&gt;)
&lt;ul&gt;
&lt;li&gt;This is the root directory of the R session running the workflow.&lt;/li&gt;
&lt;li&gt;Run script ( &lt;em&gt;*.Rmd&lt;/em&gt;) and sample annotation (&lt;em&gt;targets.txt&lt;/em&gt;) files are located here.&lt;/li&gt;
&lt;li&gt;Note, this directory can have any name (&lt;em&gt;e.g.&lt;/em&gt; &lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;rnaseq&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;, &lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;varseq&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;). Changing its name does not require any modifications in the run script(s).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Important subdirectories&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;param/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;Stores non-CWL parameter files such as: &lt;em&gt;*.param&lt;/em&gt;, &lt;em&gt;*.tmpl&lt;/em&gt; and &lt;em&gt;*.run.sh&lt;/em&gt;. These files are only required for backwards compatibility to run old workflows using the previous custom command-line interface.&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;param/cwl/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;: This subdirectory stores all the CWL parameter files. To organize workflows, each can have its own subdirectory, where all &lt;code&gt;CWL param&lt;/code&gt; and &lt;code&gt;input.yml&lt;/code&gt; files need to be in the same subdirectory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;data/&lt;/strong&gt;&lt;/em&gt; &lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;FASTQ files&lt;/li&gt;
&lt;li&gt;FASTA file of reference (&lt;em&gt;e.g.&lt;/em&gt; reference genome)&lt;/li&gt;
&lt;li&gt;Annotation files&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:green&#34;&gt;&lt;em&gt;&lt;strong&gt;results/&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;Analysis results are usually written to this directory, including: alignment, variant and peak files (BAM, VCF, BED); tabular result files; and image/plot files&lt;/li&gt;
&lt;li&gt;Note, the user has the option to organize results files for a given sample and analysis step in a separate subdirectory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Directory names are indicated in &lt;span style=&#34;color:grey&#34;&gt;&lt;em&gt;&lt;strong&gt;green&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;.
Users can change this structure as needed, but need to adjust the code in their workflows
accordingly.&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;results/directory.png&#34;&gt;
&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;systemPipeR’s&lt;/em&gt; preconfigured directory structure.&lt;/p&gt;
&lt;h1 id=&#34;run-workflows&#34;&gt;Run workflows&lt;/h1&gt;
&lt;p&gt;Next, run from within R the chosen sample workflow by executing the code provided
in the corresponding &lt;em&gt;&lt;code&gt;*.Rmd&lt;/code&gt;* template file.
Much more detailed information on running and customizing &lt;/em&gt;&lt;code&gt;systemPipeR&lt;/code&gt;*&lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/systemPipeR.html&#34;&gt;&lt;/a&gt;
workflows is available in its overview vignette &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/vignettes/systemPipeR/inst/doc/systemPipeR.html&#34;&gt;here&lt;/a&gt;.
This vignette can also be opened from R with the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;systemPipeR&amp;quot;)  # Loads systemPipeR which needs to be installed via BiocManager::install() from Bioconductor
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vignette(&amp;quot;systemPipeR&amp;quot;, package = &amp;quot;systemPipeR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;return-paths-to-sample-data&#34;&gt;Return paths to sample data&lt;/h2&gt;
&lt;p&gt;The location of the sample data provided by &lt;em&gt;&lt;code&gt;systemPipeRdata&lt;/code&gt;&lt;/em&gt; can be returned as a &lt;em&gt;&lt;code&gt;list&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pathList()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $targets
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/targets.txt&amp;quot;
## 
## $targetsPE
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/targetsPE.txt&amp;quot;
## 
## $annotationdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/annotation/&amp;quot;
## 
## $fastqdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/fastq/&amp;quot;
## 
## $bamdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/bam/&amp;quot;
## 
## $paramdir
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/param/&amp;quot;
## 
## $workflows
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/&amp;quot;
## 
## $chipseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/chipseq/&amp;quot;
## 
## $rnaseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/rnaseq/&amp;quot;
## 
## $riboseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/riboseq/&amp;quot;
## 
## $varseq
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/varseq/&amp;quot;
## 
## $new
## [1] &amp;quot;/home/dcassol/src/R-4.0.3/library/systemPipeRdata/extdata/workflows/new/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;version-information&#34;&gt;Version information&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 4.0.3 (2020-10-10)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 20.04.2 LTS
## 
## Matrix products: default
## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
## LAPACK: /home/dcassol/src/R-4.0.3/lib/libRlapack.so
## 
## locale:
##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets 
## [6] methods   base     
## 
## other attached packages:
## [1] systemPipeRdata_1.18.1 BiocStyle_2.18.1      
## 
## loaded via a namespace (and not attached):
##  [1] bookdown_0.21       codetools_0.2-18   
##  [3] digest_0.6.27       jsonlite_1.7.2     
##  [5] formatR_1.7         magrittr_2.0.1     
##  [7] evaluate_0.14       blogdown_1.1.7     
##  [9] rlang_0.4.10        stringi_1.5.3      
## [11] remotes_2.2.0       rmarkdown_2.6      
## [13] tools_4.0.3         stringr_1.4.0      
## [15] parallel_4.0.3      xfun_0.21          
## [17] yaml_2.2.1          compiler_4.0.3     
## [19] BiocGenerics_0.36.0 BiocManager_1.30.10
## [21] htmltools_0.5.1.1   knitr_1.31
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;funding&#34;&gt;Funding&lt;/h1&gt;
&lt;p&gt;This project was supported by funds from the National Institutes of Health (NIH) and the National Science Foundation (NSF).&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-H_Backman2016-bt&#34;&gt;
&lt;p&gt;H Backman, Tyler W, and Thomas Girke. 2016. “systemPipeR: NGS workflow and report generation environment.” &lt;em&gt;BMC Bioinformatics&lt;/em&gt; 17 (1): 388. &lt;a href=&#34;https://doi.org/10.1186/s12859-016-1241-0&#34;&gt;https://doi.org/10.1186/s12859-016-1241-0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
